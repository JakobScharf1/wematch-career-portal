import { Component, QueryList, ViewChildren } from '@angular/core';
import { NovoTemplateService } from '../../services/template/NovoTemplateService';
import { NovoTemplate } from '../common/novo-template/novo-template.directive';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../../services/template/NovoTemplateService';
import * as ɵngcc2 from '../common/novo-template/novo-template.directive';
import * as ɵngcc3 from '@angular/forms';
import * as ɵngcc4 from '../tooltip/Tooltip.directive';
import * as ɵngcc5 from '@angular/common';
import * as ɵngcc6 from 'angular2-text-mask';
import * as ɵngcc7 from './Control';
import * as ɵngcc8 from '../ckeditor/CKEditor';
import * as ɵngcc9 from './extras/file/FileInput';
import * as ɵngcc10 from '../tiles/Tiles';
import * as ɵngcc11 from '../picker/Picker';
import * as ɵngcc12 from '../chips/Chips';
import * as ɵngcc13 from '../chips/RowChips';
import * as ɵngcc14 from '../select/Select';
import * as ɵngcc15 from '../radio/Radio';
import * as ɵngcc16 from '../time-picker/TimePickerInput';
import * as ɵngcc17 from '../date-picker/DatePickerInput';
import * as ɵngcc18 from '../date-time-picker/DateTimePickerInput';
import * as ɵngcc19 from './extras/address/Address';
import * as ɵngcc20 from './extras/checkbox/Checkbox';
import * as ɵngcc21 from './extras/checkbox/CheckList';
import * as ɵngcc22 from '../quick-note/QuickNote';

function NovoControlTemplates_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const form_r17 = ctx.form;
    const control_r18 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(form_r17.value[control_r18.key]);
} }
function NovoControlTemplates_ng_template_1_input_1_Template(rf, ctx) { if (rf & 1) {
    const _r30 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "input", 23);
    ɵngcc0.ɵɵlistener("input", function NovoControlTemplates_ng_template_1_input_1_Template_input_input_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r30); const methods_r22 = ɵngcc0.ɵɵnextContext().methods; return methods_r22.emitChange($event); })("focus", function NovoControlTemplates_ng_template_1_input_1_Template_input_focus_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r30); const methods_r22 = ɵngcc0.ɵɵnextContext().methods; return methods_r22.handleFocus($event); })("blur", function NovoControlTemplates_ng_template_1_input_1_Template_input_blur_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r30); const methods_r22 = ɵngcc0.ɵɵnextContext().methods; return methods_r22.handleBlur($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const control_r19 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("textMask", control_r19.maskOptions)("formControlName", control_r19.key)("id", control_r19.key)("type", control_r19 == null ? null : control_r19.type)("placeholder", control_r19 == null ? null : control_r19.placeholder);
} }
function NovoControlTemplates_ng_template_1_input_2_Template(rf, ctx) { if (rf & 1) {
    const _r38 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "input", 24);
    ɵngcc0.ɵɵlistener("input", function NovoControlTemplates_ng_template_1_input_2_Template_input_input_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r38); const methods_r22 = ɵngcc0.ɵɵnextContext().methods; return methods_r22.emitChange($event); })("focus", function NovoControlTemplates_ng_template_1_input_2_Template_input_focus_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r38); const methods_r22 = ɵngcc0.ɵɵnextContext().methods; return methods_r22.handleFocus($event); })("blur", function NovoControlTemplates_ng_template_1_input_2_Template_input_blur_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r38); const methods_r22 = ɵngcc0.ɵɵnextContext().methods; return methods_r22.handleBlur($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r44 = ɵngcc0.ɵɵnextContext();
    const errors_r21 = ctx_r44.errors;
    const control_r19 = ctx_r44.$implicit;
    ɵngcc0.ɵɵclassProp("maxlength-error", errors_r21 == null ? null : errors_r21.maxlength);
    ɵngcc0.ɵɵproperty("formControlName", control_r19.key)("id", control_r19.key)("type", control_r19 == null ? null : control_r19.type)("placeholder", control_r19 == null ? null : control_r19.placeholder)("maxlength", control_r19 == null ? null : control_r19.maxlength);
} }
function NovoControlTemplates_ng_template_1_input_3_Template(rf, ctx) { if (rf & 1) {
    const _r47 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "input", 25, 26);
    ɵngcc0.ɵɵlistener("keydown", function NovoControlTemplates_ng_template_1_input_3_Template_input_keydown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r47); const methods_r22 = ɵngcc0.ɵɵnextContext().methods; return methods_r22.restrictKeys($event); })("input", function NovoControlTemplates_ng_template_1_input_3_Template_input_input_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r47); const methods_r22 = ɵngcc0.ɵɵnextContext().methods; return methods_r22.emitChange($event); })("focus", function NovoControlTemplates_ng_template_1_input_3_Template_input_focus_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r47); const methods_r22 = ɵngcc0.ɵɵnextContext().methods; return methods_r22.handleFocus($event); })("blur", function NovoControlTemplates_ng_template_1_input_3_Template_input_blur_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r47); const methods_r22 = ɵngcc0.ɵɵnextContext().methods; return methods_r22.handleBlur($event); })("mousewheel", function NovoControlTemplates_ng_template_1_input_3_Template_input_mousewheel_0_listener() { ɵngcc0.ɵɵrestoreView(_r47); const _r45 = ɵngcc0.ɵɵreference(1); return _r45.blur(); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r56 = ɵngcc0.ɵɵnextContext();
    const errors_r21 = ctx_r56.errors;
    const control_r19 = ctx_r56.$implicit;
    ɵngcc0.ɵɵclassProp("maxlength-error", errors_r21 == null ? null : errors_r21.maxlength);
    ɵngcc0.ɵɵproperty("formControlName", control_r19.key)("id", control_r19.key)("type", control_r19 == null ? null : control_r19.type)("placeholder", control_r19 == null ? null : control_r19.placeholder)("maxlength", control_r19 == null ? null : control_r19.maxlength);
} }
function NovoControlTemplates_ng_template_1_input_4_Template(rf, ctx) { if (rf & 1) {
    const _r59 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "input", 27, 28);
    ɵngcc0.ɵɵlistener("keydown", function NovoControlTemplates_ng_template_1_input_4_Template_input_keydown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r59); const methods_r22 = ɵngcc0.ɵɵnextContext().methods; return methods_r22.restrictKeys($event); })("input", function NovoControlTemplates_ng_template_1_input_4_Template_input_input_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r59); const methods_r22 = ɵngcc0.ɵɵnextContext().methods; return methods_r22.handlePercentChange($event); })("focus", function NovoControlTemplates_ng_template_1_input_4_Template_input_focus_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r59); const methods_r22 = ɵngcc0.ɵɵnextContext().methods; return methods_r22.handleFocus($event); })("blur", function NovoControlTemplates_ng_template_1_input_4_Template_input_blur_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r59); const methods_r22 = ɵngcc0.ɵɵnextContext().methods; return methods_r22.handleBlur($event); })("mousewheel", function NovoControlTemplates_ng_template_1_input_4_Template_input_mousewheel_0_listener() { ɵngcc0.ɵɵrestoreView(_r59); const _r57 = ɵngcc0.ɵɵreference(1); return _r57.blur(); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const control_r19 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("id", control_r19.key)("type", control_r19 == null ? null : control_r19.type)("placeholder", control_r19 == null ? null : control_r19.placeholder)("value", control_r19 == null ? null : control_r19.percentValue)("disabled", control_r19 == null ? null : control_r19.readOnly);
} }
function NovoControlTemplates_ng_template_1_label_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "label", 29);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const control_r19 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(control_r19.currencyFormat);
} }
function NovoControlTemplates_ng_template_1_label_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "label", 29);
    ɵngcc0.ɵɵtext(1, "%");
    ɵngcc0.ɵɵelementEnd();
} }
function NovoControlTemplates_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 17);
    ɵngcc0.ɵɵtemplate(1, NovoControlTemplates_ng_template_1_input_1_Template, 1, 5, "input", 18);
    ɵngcc0.ɵɵtemplate(2, NovoControlTemplates_ng_template_1_input_2_Template, 1, 7, "input", 19);
    ɵngcc0.ɵɵtemplate(3, NovoControlTemplates_ng_template_1_input_3_Template, 2, 7, "input", 20);
    ɵngcc0.ɵɵtemplate(4, NovoControlTemplates_ng_template_1_input_4_Template, 2, 5, "input", 21);
    ɵngcc0.ɵɵtemplate(5, NovoControlTemplates_ng_template_1_label_5_Template, 2, 1, "label", 22);
    ɵngcc0.ɵɵtemplate(6, NovoControlTemplates_ng_template_1_label_6_Template, 2, 0, "label", 22);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const control_r19 = ctx.$implicit;
    const form_r20 = ctx.form;
    ɵngcc0.ɵɵproperty("formGroup", form_r20)("tooltip", control_r19 == null ? null : control_r19.tooltip)("tooltipPosition", control_r19 == null ? null : control_r19.tooltipPosition)("tooltipSize", control_r19 == null ? null : control_r19.tooltipSize)("tooltipPreline", control_r19 == null ? null : control_r19.tooltipPreline)("removeTooltipArrow", control_r19 == null ? null : control_r19.removeTooltipArrow)("tooltipAutoPosition", control_r19 == null ? null : control_r19.tooltipAutoPosition);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", (control_r19 == null ? null : control_r19.type) !== "number" && (control_r19 == null ? null : control_r19.textMaskEnabled));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", (control_r19 == null ? null : control_r19.type) !== "number" && !(control_r19 == null ? null : control_r19.textMaskEnabled));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", (control_r19 == null ? null : control_r19.type) === "number" && (control_r19 == null ? null : control_r19.subType) !== "percentage");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", (control_r19 == null ? null : control_r19.type) === "number" && (control_r19 == null ? null : control_r19.subType) === "percentage");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", (control_r19 == null ? null : control_r19.subType) === "currency");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", (control_r19 == null ? null : control_r19.subType) === "percentage");
} }
function NovoControlTemplates_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    const _r75 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 30);
    ɵngcc0.ɵɵelementStart(1, "textarea", 31);
    ɵngcc0.ɵɵlistener("input", function NovoControlTemplates_ng_template_2_Template_textarea_input_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r75); const methods_r73 = ctx.methods; return methods_r73.handleTextAreaInput($event); })("focus", function NovoControlTemplates_ng_template_2_Template_textarea_focus_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r75); const methods_r73 = ctx.methods; return methods_r73.handleFocus($event); })("blur", function NovoControlTemplates_ng_template_2_Template_textarea_blur_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r75); const methods_r73 = ctx.methods; return methods_r73.handleBlur($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const control_r70 = ctx.$implicit;
    const form_r71 = ctx.form;
    const errors_r72 = ctx.errors;
    ɵngcc0.ɵɵproperty("formGroup", form_r71)("tooltip", control_r70 == null ? null : control_r70.tooltip)("tooltipPosition", control_r70 == null ? null : control_r70.tooltipPosition)("tooltipSize", control_r70 == null ? null : control_r70.tooltipSize)("tooltipPreline", control_r70 == null ? null : control_r70.tooltipPreline)("removeTooltipArrow", control_r70 == null ? null : control_r70.removeTooltipArrow)("tooltipAutoPosition", control_r70 == null ? null : control_r70.tooltipAutoPosition);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassProp("maxlength-error", errors_r72 == null ? null : errors_r72.maxlength);
    ɵngcc0.ɵɵproperty("name", control_r70.key)("placeholder", control_r70.placeholder)("formControlName", control_r70.key)("maxlength", control_r70 == null ? null : control_r70.maxlength);
    ɵngcc0.ɵɵattribute("id", control_r70.key);
} }
function NovoControlTemplates_ng_template_3_Template(rf, ctx) { if (rf & 1) {
    const _r83 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 32);
    ɵngcc0.ɵɵelementStart(1, "novo-editor", 33);
    ɵngcc0.ɵɵlistener("focus", function NovoControlTemplates_ng_template_3_Template_novo_editor_focus_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r83); const methods_r81 = ctx.methods; return methods_r81.handleFocus($event); })("blur", function NovoControlTemplates_ng_template_3_Template_novo_editor_blur_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r83); const methods_r81 = ctx.methods; return methods_r81.handleBlur($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const control_r78 = ctx.$implicit;
    const form_r79 = ctx.form;
    ɵngcc0.ɵɵproperty("formGroup", form_r79);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("name", control_r78.key)("formControlName", control_r78.key)("startupFocus", control_r78.startupFocus)("minimal", control_r78.minimal)("fileBrowserImageUploadUrl", control_r78.fileBrowserImageUploadUrl)("config", control_r78.config);
} }
function NovoControlTemplates_ng_template_4_option_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "option", 37);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const control_r85 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(control_r85.placeholder);
} }
function NovoControlTemplates_ng_template_4_option_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "option", 38);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const opt_r92 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("value", opt_r92.key);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(opt_r92.value);
} }
function NovoControlTemplates_ng_template_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 32);
    ɵngcc0.ɵɵelementStart(1, "select", 34);
    ɵngcc0.ɵɵtemplate(2, NovoControlTemplates_ng_template_4_option_2_Template, 2, 1, "option", 35);
    ɵngcc0.ɵɵtemplate(3, NovoControlTemplates_ng_template_4_option_3_Template, 2, 2, "option", 36);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const control_r85 = ctx.$implicit;
    const form_r86 = ctx.form;
    ɵngcc0.ɵɵproperty("formGroup", form_r86);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("id", control_r85.key)("formControlName", control_r85.key)("tooltip", control_r85.tooltip)("tooltipPosition", control_r85.tooltipPosition)("tooltipSize", control_r85 == null ? null : control_r85.tooltipSize)("tooltipPreline", control_r85 == null ? null : control_r85.tooltipPreline)("removeTooltipArrow", control_r85 == null ? null : control_r85.removeTooltipArrow)("tooltipAutoPosition", control_r85 == null ? null : control_r85.tooltipAutoPosition);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", control_r85.placeholder);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", control_r85.options);
} }
function NovoControlTemplates_ng_template_5_Template(rf, ctx) { if (rf & 1) {
    const _r98 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 32);
    ɵngcc0.ɵɵelementStart(1, "novo-file-input", 39);
    ɵngcc0.ɵɵlistener("edit", function NovoControlTemplates_ng_template_5_Template_novo_file_input_edit_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r98); const methods_r96 = ctx.methods; return methods_r96.handleEdit($event); })("save", function NovoControlTemplates_ng_template_5_Template_novo_file_input_save_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r98); const methods_r96 = ctx.methods; return methods_r96.handleSave($event); })("delete", function NovoControlTemplates_ng_template_5_Template_novo_file_input_delete_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r98); const methods_r96 = ctx.methods; return methods_r96.handleDelete($event); })("upload", function NovoControlTemplates_ng_template_5_Template_novo_file_input_upload_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r98); const methods_r96 = ctx.methods; return methods_r96.handleUpload($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const control_r93 = ctx.$implicit;
    const form_r94 = ctx.form;
    ɵngcc0.ɵɵproperty("formGroup", form_r94);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("formControlName", control_r93.key)("id", control_r93.key)("name", control_r93.key)("placeholder", control_r93.placeholder)("value", control_r93.value)("multiple", control_r93.multiple)("layoutOptions", control_r93.layoutOptions)("tooltip", control_r93.tooltip)("tooltipPosition", control_r93.tooltipPosition)("tooltipSize", control_r93 == null ? null : control_r93.tooltipSize)("tooltipPreline", control_r93 == null ? null : control_r93.tooltipPreline)("removeTooltipArrow", control_r93 == null ? null : control_r93.removeTooltipArrow)("tooltipAutoPosition", control_r93 == null ? null : control_r93.tooltipAutoPosition);
} }
function NovoControlTemplates_ng_template_6_Template(rf, ctx) { if (rf & 1) {
    const _r107 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 32);
    ɵngcc0.ɵɵelementStart(1, "novo-tiles", 40);
    ɵngcc0.ɵɵlistener("onChange", function NovoControlTemplates_ng_template_6_Template_novo_tiles_onChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r107); const methods_r105 = ctx.methods; return methods_r105.modelChange($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const control_r102 = ctx.$implicit;
    const form_r103 = ctx.form;
    ɵngcc0.ɵɵproperty("formGroup", form_r103);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("options", control_r102.options)("formControlName", control_r102.key)("tooltip", control_r102.tooltip)("tooltipPosition", control_r102.tooltipPosition)("tooltipSize", control_r102 == null ? null : control_r102.tooltipSize)("tooltipPreline", control_r102 == null ? null : control_r102.tooltipPreline)("removeTooltipArrow", control_r102 == null ? null : control_r102.removeTooltipArrow)("tooltipAutoPosition", control_r102 == null ? null : control_r102.tooltipAutoPosition)("controlDisabled", control_r102.disabled);
} }
function NovoControlTemplates_ng_template_7_novo_picker_1_Template(rf, ctx) { if (rf & 1) {
    const _r116 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "novo-picker", 45);
    ɵngcc0.ɵɵlistener("select", function NovoControlTemplates_ng_template_7_novo_picker_1_Template_novo_picker_select_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r116); const methods_r111 = ɵngcc0.ɵɵnextContext().methods; return methods_r111.modelChange($event); })("changed", function NovoControlTemplates_ng_template_7_novo_picker_1_Template_novo_picker_changed_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r116); const methods_r111 = ɵngcc0.ɵɵnextContext().methods; return methods_r111.modelChangeWithRaw($event); })("typing", function NovoControlTemplates_ng_template_7_novo_picker_1_Template_novo_picker_typing_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r116); const methods_r111 = ɵngcc0.ɵɵnextContext().methods; return methods_r111.handleTyping($event); })("focus", function NovoControlTemplates_ng_template_7_novo_picker_1_Template_novo_picker_focus_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r116); const methods_r111 = ɵngcc0.ɵɵnextContext().methods; return methods_r111.handleFocus($event); })("blur", function NovoControlTemplates_ng_template_7_novo_picker_1_Template_novo_picker_blur_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r116); const methods_r111 = ɵngcc0.ɵɵnextContext().methods; return methods_r111.handleBlur($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const control_r108 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("config", control_r108.config)("formControlName", control_r108.key)("placeholder", control_r108.placeholder)("parentScrollSelector", control_r108.parentScrollSelector)("tooltip", control_r108.tooltip)("tooltipPosition", control_r108.tooltipPosition)("tooltipSize", control_r108 == null ? null : control_r108.tooltipSize)("tooltipPreline", control_r108 == null ? null : control_r108.tooltipPreline)("removeTooltipArrow", control_r108 == null ? null : control_r108.removeTooltipArrow)("tooltipAutoPosition", control_r108 == null ? null : control_r108.tooltipAutoPosition);
} }
function NovoControlTemplates_ng_template_7_novo_chips_2_Template(rf, ctx) { if (rf & 1) {
    const _r128 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "novo-chips", 46);
    ɵngcc0.ɵɵlistener("changed", function NovoControlTemplates_ng_template_7_novo_chips_2_Template_novo_chips_changed_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r128); const methods_r111 = ɵngcc0.ɵɵnextContext().methods; return methods_r111.modelChangeWithRaw($event); })("typing", function NovoControlTemplates_ng_template_7_novo_chips_2_Template_novo_chips_typing_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r128); const methods_r111 = ɵngcc0.ɵɵnextContext().methods; return methods_r111.handleTyping($event); })("focus", function NovoControlTemplates_ng_template_7_novo_chips_2_Template_novo_chips_focus_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r128); const methods_r111 = ɵngcc0.ɵɵnextContext().methods; return methods_r111.handleFocus($event); })("blur", function NovoControlTemplates_ng_template_7_novo_chips_2_Template_novo_chips_blur_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r128); const methods_r111 = ɵngcc0.ɵɵnextContext().methods; return methods_r111.handleBlur($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const control_r108 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("source", control_r108.config)("type", control_r108.config.type)("formControlName", control_r108.key)("placeholder", control_r108.placeholder)("maxlength", control_r108 == null ? null : control_r108.maxlength)("closeOnSelect", control_r108.closeOnSelect)("tooltip", control_r108.tooltip)("tooltipPosition", control_r108.tooltipPosition)("tooltipSize", control_r108 == null ? null : control_r108.tooltipSize)("tooltipPreline", control_r108 == null ? null : control_r108.tooltipPreline)("removeTooltipArrow", control_r108 == null ? null : control_r108.removeTooltipArrow)("tooltipAutoPosition", control_r108 == null ? null : control_r108.tooltipAutoPosition);
} }
function NovoControlTemplates_ng_template_7_novo_row_chips_3_Template(rf, ctx) { if (rf & 1) {
    const _r138 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "novo-row-chips", 47);
    ɵngcc0.ɵɵlistener("changed", function NovoControlTemplates_ng_template_7_novo_row_chips_3_Template_novo_row_chips_changed_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r138); const methods_r111 = ɵngcc0.ɵɵnextContext().methods; return methods_r111.modelChangeWithRaw($event); })("typing", function NovoControlTemplates_ng_template_7_novo_row_chips_3_Template_novo_row_chips_typing_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r138); const methods_r111 = ɵngcc0.ɵɵnextContext().methods; return methods_r111.handleTyping($event); })("focus", function NovoControlTemplates_ng_template_7_novo_row_chips_3_Template_novo_row_chips_focus_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r138); const methods_r111 = ɵngcc0.ɵɵnextContext().methods; return methods_r111.handleFocus($event); })("blur", function NovoControlTemplates_ng_template_7_novo_row_chips_3_Template_novo_row_chips_blur_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r138); const methods_r111 = ɵngcc0.ɵɵnextContext().methods; return methods_r111.handleBlur($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const control_r108 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("source", control_r108.config)("type", control_r108.config.type)("formControlName", control_r108.key)("placeholder", control_r108.placeholder)("closeOnSelect", control_r108.closeOnSelect)("tooltip", control_r108.tooltip)("tooltipPosition", control_r108.tooltipPosition)("tooltipSize", control_r108 == null ? null : control_r108.tooltipSize)("tooltipPreline", control_r108 == null ? null : control_r108.tooltipPreline)("removeTooltipArrow", control_r108 == null ? null : control_r108.removeTooltipArrow)("tooltipAutoPosition", control_r108 == null ? null : control_r108.tooltipAutoPosition);
} }
function NovoControlTemplates_ng_template_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 41);
    ɵngcc0.ɵɵtemplate(1, NovoControlTemplates_ng_template_7_novo_picker_1_Template, 1, 10, "novo-picker", 42);
    ɵngcc0.ɵɵtemplate(2, NovoControlTemplates_ng_template_7_novo_chips_2_Template, 1, 12, "novo-chips", 43);
    ɵngcc0.ɵɵtemplate(3, NovoControlTemplates_ng_template_7_novo_row_chips_3_Template, 1, 11, "novo-row-chips", 44);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const control_r108 = ctx.$implicit;
    const form_r109 = ctx.form;
    ɵngcc0.ɵɵproperty("formGroup", form_r109);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !control_r108.multiple);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", control_r108.multiple && !control_r108.config.columns);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", control_r108.multiple && control_r108.config.columns);
} }
function NovoControlTemplates_ng_template_8_Template(rf, ctx) { if (rf & 1) {
    const _r152 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 32);
    ɵngcc0.ɵɵelementStart(1, "novo-select", 48);
    ɵngcc0.ɵɵlistener("onSelect", function NovoControlTemplates_ng_template_8_Template_novo_select_onSelect_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r152); const methods_r150 = ctx.methods; return methods_r150.modelChange($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const control_r147 = ctx.$implicit;
    const form_r148 = ctx.form;
    ɵngcc0.ɵɵproperty("formGroup", form_r148);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("options", control_r147.options)("headerConfig", control_r147.headerConfig)("placeholder", control_r147.placeholder)("formControlName", control_r147.key)("tooltip", control_r147.tooltip)("tooltipPosition", control_r147.tooltipPosition)("tooltipSize", control_r147 == null ? null : control_r147.tooltipSize)("tooltipPreline", control_r147 == null ? null : control_r147.tooltipPreline)("removeTooltipArrow", control_r147 == null ? null : control_r147.removeTooltipArrow)("tooltipAutoPosition", control_r147 == null ? null : control_r147.tooltipAutoPosition);
} }
function NovoControlTemplates_ng_template_9_novo_radio_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "novo-radio", 50);
} if (rf & 2) {
    const option_r158 = ctx.$implicit;
    const ctx_r159 = ɵngcc0.ɵɵnextContext();
    const control_r153 = ctx_r159.$implicit;
    const form_r154 = ctx_r159.form;
    ɵngcc0.ɵɵproperty("name", control_r153.key)("formControlName", control_r153.key)("value", option_r158.value)("label", option_r158.label)("checked", option_r158.value === form_r154.value[control_r153.key] || form_r154.value[control_r153.key] && option_r158.value === form_r154.value[control_r153.key].id)("tooltip", control_r153.tooltip)("tooltipPosition", control_r153.tooltipPosition)("tooltipSize", control_r153 == null ? null : control_r153.tooltipSize)("tooltipPreline", control_r153 == null ? null : control_r153.tooltipPreline)("removeTooltipArrow", control_r153 == null ? null : control_r153.removeTooltipArrow)("tooltipAutoPosition", control_r153 == null ? null : control_r153.tooltipAutoPosition)("button", !!option_r158.icon)("icon", option_r158.icon);
    ɵngcc0.ɵɵattribute("data-automation-id", control_r153.key + "-" + ((option_r158 == null ? null : option_r158.label) || (option_r158 == null ? null : option_r158.value)));
} }
function NovoControlTemplates_ng_template_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 41);
    ɵngcc0.ɵɵtemplate(1, NovoControlTemplates_ng_template_9_novo_radio_1_Template, 1, 14, "novo-radio", 49);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const control_r153 = ctx.$implicit;
    const form_r154 = ctx.form;
    ɵngcc0.ɵɵproperty("formGroup", form_r154);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", control_r153.options);
} }
function NovoControlTemplates_ng_template_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 51);
    ɵngcc0.ɵɵelement(1, "novo-time-picker-input", 52);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const control_r160 = ctx.$implicit;
    const form_r161 = ctx.form;
    ɵngcc0.ɵɵproperty("formGroup", form_r161)("tooltip", control_r160 == null ? null : control_r160.tooltip)("tooltipPosition", control_r160 == null ? null : control_r160.tooltipPosition)("tooltipSize", control_r160 == null ? null : control_r160.tooltipSize)("tooltipPreline", control_r160 == null ? null : control_r160.tooltipPreline)("removeTooltipArrow", control_r160 == null ? null : control_r160.removeTooltipArrow)("tooltipAutoPosition", control_r160 == null ? null : control_r160.tooltipAutoPosition);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("name", control_r160.key)("formControlName", control_r160.key)("placeholder", control_r160.placeholder)("military", control_r160.military);
    ɵngcc0.ɵɵattribute("id", control_r160.key);
} }
function NovoControlTemplates_ng_template_11_Template(rf, ctx) { if (rf & 1) {
    const _r169 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 51);
    ɵngcc0.ɵɵelementStart(1, "novo-date-picker-input", 53);
    ɵngcc0.ɵɵlistener("focusEvent", function NovoControlTemplates_ng_template_11_Template_novo_date_picker_input_focusEvent_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r169); const methods_r167 = ctx.methods; return methods_r167.handleFocus($event); })("blurEvent", function NovoControlTemplates_ng_template_11_Template_novo_date_picker_input_blurEvent_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r169); const methods_r167 = ctx.methods; return methods_r167.handleBlur($event); })("changeEvent", function NovoControlTemplates_ng_template_11_Template_novo_date_picker_input_changeEvent_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r169); const methods_r167 = ctx.methods; return methods_r167.emitChange($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const control_r164 = ctx.$implicit;
    const form_r165 = ctx.form;
    ɵngcc0.ɵɵproperty("formGroup", form_r165)("tooltip", control_r164.tooltip)("tooltipPosition", control_r164.tooltipPosition)("tooltipSize", control_r164 == null ? null : control_r164.tooltipSize)("tooltipPreline", control_r164 == null ? null : control_r164.tooltipPreline)("removeTooltipArrow", control_r164 == null ? null : control_r164.removeTooltipArrow)("tooltipAutoPosition", control_r164 == null ? null : control_r164.tooltipAutoPosition);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("name", control_r164.key)("formControlName", control_r164.key)("start", control_r164.startDate)("end", control_r164.endDate)("format", control_r164.dateFormat)("allowInvalidDate", control_r164.allowInvalidDate)("textMaskEnabled", control_r164.textMaskEnabled)("placeholder", control_r164.placeholder)("weekStart", control_r164.weekStart);
    ɵngcc0.ɵɵattribute("id", control_r164.key);
} }
function NovoControlTemplates_ng_template_12_Template(rf, ctx) { if (rf & 1) {
    const _r177 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 51);
    ɵngcc0.ɵɵelementStart(1, "novo-date-time-picker-input", 54);
    ɵngcc0.ɵɵlistener("focusEvent", function NovoControlTemplates_ng_template_12_Template_novo_date_time_picker_input_focusEvent_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r177); const methods_r175 = ctx.methods; return methods_r175.handleFocus($event); })("blurEvent", function NovoControlTemplates_ng_template_12_Template_novo_date_time_picker_input_blurEvent_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r177); const methods_r175 = ctx.methods; return methods_r175.handleBlur($event); })("changeEvent", function NovoControlTemplates_ng_template_12_Template_novo_date_time_picker_input_changeEvent_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r177); const methods_r175 = ctx.methods; return methods_r175.emitChange($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const control_r172 = ctx.$implicit;
    const form_r173 = ctx.form;
    ɵngcc0.ɵɵproperty("formGroup", form_r173)("tooltip", control_r172.tooltip)("tooltipPosition", control_r172.tooltipPosition)("tooltipSize", control_r172 == null ? null : control_r172.tooltipSize)("tooltipPreline", control_r172 == null ? null : control_r172.tooltipPreline)("removeTooltipArrow", control_r172 == null ? null : control_r172.removeTooltipArrow)("tooltipAutoPosition", control_r172 == null ? null : control_r172.tooltipAutoPosition);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("name", control_r172.key)("formControlName", control_r172.key)("start", control_r172.startDate)("end", control_r172.endDate)("placeholder", control_r172.placeholder)("military", control_r172.military)("weekStart", control_r172.weekStart);
    ɵngcc0.ɵɵattribute("id", control_r172.key);
} }
function NovoControlTemplates_ng_template_13_Template(rf, ctx) { if (rf & 1) {
    const _r185 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 32);
    ɵngcc0.ɵɵelementStart(1, "novo-address", 55);
    ɵngcc0.ɵɵlistener("change", function NovoControlTemplates_ng_template_13_Template_novo_address_change_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r185); const methods_r183 = ctx.methods; return methods_r183.handleAddressChange($event); })("focus", function NovoControlTemplates_ng_template_13_Template_novo_address_focus_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r185); const methods_r183 = ctx.methods; return methods_r183.handleFocus($event.event, $event.field); })("blur", function NovoControlTemplates_ng_template_13_Template_novo_address_blur_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r185); const methods_r183 = ctx.methods; return methods_r183.handleBlur($event.event, $event.field); })("validityChange", function NovoControlTemplates_ng_template_13_Template_novo_address_validityChange_1_listener() { const methods_r183 = ctx.methods; return methods_r183.updateValidity(); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const control_r180 = ctx.$implicit;
    const form_r181 = ctx.form;
    ɵngcc0.ɵɵproperty("formGroup", form_r181);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("formControlName", control_r180.key)("config", control_r180 == null ? null : control_r180.config)("readOnly", control_r180 == null ? null : control_r180.readOnly);
} }
function NovoControlTemplates_ng_template_14_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 32);
    ɵngcc0.ɵɵelement(1, "novo-checkbox", 56);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const control_r189 = ctx.$implicit;
    const form_r190 = ctx.form;
    ɵngcc0.ɵɵproperty("formGroup", form_r190);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("formControlName", control_r189 == null ? null : control_r189.key)("name", control_r189 == null ? null : control_r189.key)("label", control_r189 == null ? null : control_r189.checkboxLabel)("tooltip", control_r189 == null ? null : control_r189.tooltip)("tooltipPosition", control_r189 == null ? null : control_r189.tooltipPosition)("tooltipSize", control_r189 == null ? null : control_r189.tooltipSize)("tooltipPreline", control_r189 == null ? null : control_r189.tooltipPreline)("removeTooltipArrow", control_r189 == null ? null : control_r189.removeTooltipArrow)("tooltipAutoPosition", control_r189 == null ? null : control_r189.tooltipAutoPosition)("layoutOptions", control_r189 == null ? null : control_r189.layoutOptions);
} }
function NovoControlTemplates_ng_template_15_Template(rf, ctx) { if (rf & 1) {
    const _r198 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 32);
    ɵngcc0.ɵɵelementStart(1, "novo-check-list", 57);
    ɵngcc0.ɵɵlistener("onSelect", function NovoControlTemplates_ng_template_15_Template_novo_check_list_onSelect_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r198); const methods_r196 = ctx.methods; return methods_r196.modelChange($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const control_r193 = ctx.$implicit;
    const form_r194 = ctx.form;
    ɵngcc0.ɵɵproperty("formGroup", form_r194);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("formControlName", control_r193.key)("name", control_r193.key)("options", control_r193 == null ? null : control_r193.options)("tooltip", control_r193 == null ? null : control_r193.tooltip)("tooltipPosition", control_r193 == null ? null : control_r193.tooltipPosition)("tooltipSize", control_r193 == null ? null : control_r193.tooltipSize)("tooltipPreline", control_r193 == null ? null : control_r193.tooltipPreline)("removeTooltipArrow", control_r193 == null ? null : control_r193.removeTooltipArrow)("tooltipAutoPosition", control_r193 == null ? null : control_r193.tooltipAutoPosition);
} }
function NovoControlTemplates_ng_template_16_Template(rf, ctx) { if (rf & 1) {
    const _r204 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 32);
    ɵngcc0.ɵɵelementStart(1, "novo-quick-note", 58);
    ɵngcc0.ɵɵlistener("change", function NovoControlTemplates_ng_template_16_Template_novo_quick_note_change_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r204); const methods_r202 = ctx.methods; return methods_r202.modelChange($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const control_r199 = ctx.$implicit;
    const form_r200 = ctx.form;
    ɵngcc0.ɵɵproperty("formGroup", form_r200);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("formControlName", control_r199.key)("startupFocus", control_r199 == null ? null : control_r199.startupFocus)("placeholder", control_r199 == null ? null : control_r199.placeholder)("config", control_r199 == null ? null : control_r199.config)("tooltip", control_r199 == null ? null : control_r199.tooltip)("tooltipPosition", control_r199 == null ? null : control_r199.tooltipPosition)("tooltipSize", control_r199 == null ? null : control_r199.tooltipSize)("removeTooltipArrow", control_r199 == null ? null : control_r199.removeTooltipArrow)("tooltipAutoPosition", control_r199 == null ? null : control_r199.tooltipAutoPosition)("tooltipPreline", control_r199 == null ? null : control_r199.tooltipPreline);
} }
export class NovoControlTemplates {
    constructor(templates) {
        this.templates = templates;
    }
    ngAfterViewInit() {
        if (this.defaultTemplates && this.defaultTemplates.length) {
            this.defaultTemplates.forEach((template) => {
                this.templates.addDefault(template.name, template.template);
            });
        }
    }
}
NovoControlTemplates.ɵfac = function NovoControlTemplates_Factory(t) { return new (t || NovoControlTemplates)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NovoTemplateService)); };
NovoControlTemplates.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NovoControlTemplates, selectors: [["novo-control-templates"]], viewQuery: function NovoControlTemplates_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(NovoTemplate, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.defaultTemplates = _t);
    } }, decls: 17, vars: 0, consts: [["novoTemplate", "read-only"], ["novoTemplate", "textbox"], ["novoTemplate", "text-area"], ["novoTemplate", "editor"], ["novoTemplate", "native-select"], ["novoTemplate", "file"], ["novoTemplate", "tiles"], ["novoTemplate", "picker"], ["novoTemplate", "select"], ["novoTemplate", "radio"], ["novoTemplate", "time"], ["novoTemplate", "date"], ["novoTemplate", "date-time"], ["novoTemplate", "address"], ["novoTemplate", "checkbox"], ["novoTemplate", "checklist"], ["novoTemplate", "quick-note"], [1, "novo-control-input-container", "novo-control-input-with-label", 3, "formGroup", "tooltip", "tooltipPosition", "tooltipSize", "tooltipPreline", "removeTooltipArrow", "tooltipAutoPosition"], ["autocomplete", "", 3, "textMask", "formControlName", "id", "type", "placeholder", "input", "focus", "blur", 4, "ngIf"], ["autocomplete", "", 3, "maxlength-error", "formControlName", "id", "type", "placeholder", "maxlength", "input", "focus", "blur", 4, "ngIf"], ["step", "any", 3, "maxlength-error", "formControlName", "id", "type", "placeholder", "maxlength", "keydown", "input", "focus", "blur", "mousewheel", 4, "ngIf"], ["step", "any", 3, "id", "type", "placeholder", "value", "disabled", "keydown", "input", "focus", "blur", "mousewheel", 4, "ngIf"], ["class", "input-label", 4, "ngIf"], ["autocomplete", "", 3, "textMask", "formControlName", "id", "type", "placeholder", "input", "focus", "blur"], ["autocomplete", "", 3, "formControlName", "id", "type", "placeholder", "maxlength", "input", "focus", "blur"], ["step", "any", 3, "formControlName", "id", "type", "placeholder", "maxlength", "keydown", "input", "focus", "blur", "mousewheel"], ["numberInput", ""], ["step", "any", 3, "id", "type", "placeholder", "value", "disabled", "keydown", "input", "focus", "blur", "mousewheel"], ["percentInput", ""], [1, "input-label"], [1, "textarea-container", 3, "formGroup", "tooltip", "tooltipPosition", "tooltipSize", "tooltipPreline", "removeTooltipArrow", "tooltipAutoPosition"], ["autosize", "", 3, "name", "placeholder", "formControlName", "maxlength", "input", "focus", "blur"], [3, "formGroup"], [3, "name", "formControlName", "startupFocus", "minimal", "fileBrowserImageUploadUrl", "config", "focus", "blur"], [3, "id", "formControlName", "tooltip", "tooltipPosition", "tooltipSize", "tooltipPreline", "removeTooltipArrow", "tooltipAutoPosition"], ["value", "", "disabled", "", "selected", "", "hidden", "", 4, "ngIf"], [3, "value", 4, "ngFor", "ngForOf"], ["value", "", "disabled", "", "selected", "", "hidden", ""], [3, "value"], [3, "formControlName", "id", "name", "placeholder", "value", "multiple", "layoutOptions", "tooltip", "tooltipPosition", "tooltipSize", "tooltipPreline", "removeTooltipArrow", "tooltipAutoPosition", "edit", "save", "delete", "upload"], [3, "options", "formControlName", "tooltip", "tooltipPosition", "tooltipSize", "tooltipPreline", "removeTooltipArrow", "tooltipAutoPosition", "controlDisabled", "onChange"], [1, "novo-control-input-container", 3, "formGroup"], [3, "config", "formControlName", "placeholder", "parentScrollSelector", "tooltip", "tooltipPosition", "tooltipSize", "tooltipPreline", "removeTooltipArrow", "tooltipAutoPosition", "select", "changed", "typing", "focus", "blur", 4, "ngIf"], [3, "source", "type", "formControlName", "placeholder", "maxlength", "closeOnSelect", "tooltip", "tooltipPosition", "tooltipSize", "tooltipPreline", "removeTooltipArrow", "tooltipAutoPosition", "changed", "typing", "focus", "blur", 4, "ngIf"], [3, "source", "type", "formControlName", "placeholder", "closeOnSelect", "tooltip", "tooltipPosition", "tooltipSize", "tooltipPreline", "removeTooltipArrow", "tooltipAutoPosition", "changed", "typing", "focus", "blur", 4, "ngIf"], [3, "config", "formControlName", "placeholder", "parentScrollSelector", "tooltip", "tooltipPosition", "tooltipSize", "tooltipPreline", "removeTooltipArrow", "tooltipAutoPosition", "select", "changed", "typing", "focus", "blur"], [3, "source", "type", "formControlName", "placeholder", "maxlength", "closeOnSelect", "tooltip", "tooltipPosition", "tooltipSize", "tooltipPreline", "removeTooltipArrow", "tooltipAutoPosition", "changed", "typing", "focus", "blur"], [3, "source", "type", "formControlName", "placeholder", "closeOnSelect", "tooltip", "tooltipPosition", "tooltipSize", "tooltipPreline", "removeTooltipArrow", "tooltipAutoPosition", "changed", "typing", "focus", "blur"], [3, "options", "headerConfig", "placeholder", "formControlName", "tooltip", "tooltipPosition", "tooltipSize", "tooltipPreline", "removeTooltipArrow", "tooltipAutoPosition", "onSelect"], [3, "name", "formControlName", "value", "label", "checked", "tooltip", "tooltipPosition", "tooltipSize", "tooltipPreline", "removeTooltipArrow", "tooltipAutoPosition", "button", "icon", 4, "ngFor", "ngForOf"], [3, "name", "formControlName", "value", "label", "checked", "tooltip", "tooltipPosition", "tooltipSize", "tooltipPreline", "removeTooltipArrow", "tooltipAutoPosition", "button", "icon"], [1, "novo-control-input-container", 3, "formGroup", "tooltip", "tooltipPosition", "tooltipSize", "tooltipPreline", "removeTooltipArrow", "tooltipAutoPosition"], [3, "name", "formControlName", "placeholder", "military"], [3, "name", "formControlName", "start", "end", "format", "allowInvalidDate", "textMaskEnabled", "placeholder", "weekStart", "focusEvent", "blurEvent", "changeEvent"], [3, "name", "formControlName", "start", "end", "placeholder", "military", "weekStart", "focusEvent", "blurEvent", "changeEvent"], [3, "formControlName", "config", "readOnly", "change", "focus", "blur", "validityChange"], [3, "formControlName", "name", "label", "tooltip", "tooltipPosition", "tooltipSize", "tooltipPreline", "removeTooltipArrow", "tooltipAutoPosition", "layoutOptions"], [3, "formControlName", "name", "options", "tooltip", "tooltipPosition", "tooltipSize", "tooltipPreline", "removeTooltipArrow", "tooltipAutoPosition", "onSelect"], [3, "formControlName", "startupFocus", "placeholder", "config", "tooltip", "tooltipPosition", "tooltipSize", "removeTooltipArrow", "tooltipAutoPosition", "tooltipPreline", "change"]], template: function NovoControlTemplates_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, NovoControlTemplates_ng_template_0_Template, 2, 1, "ng-template", 0);
        ɵngcc0.ɵɵtemplate(1, NovoControlTemplates_ng_template_1_Template, 7, 13, "ng-template", 1);
        ɵngcc0.ɵɵtemplate(2, NovoControlTemplates_ng_template_2_Template, 2, 14, "ng-template", 2);
        ɵngcc0.ɵɵtemplate(3, NovoControlTemplates_ng_template_3_Template, 2, 7, "ng-template", 3);
        ɵngcc0.ɵɵtemplate(4, NovoControlTemplates_ng_template_4_Template, 4, 11, "ng-template", 4);
        ɵngcc0.ɵɵtemplate(5, NovoControlTemplates_ng_template_5_Template, 2, 14, "ng-template", 5);
        ɵngcc0.ɵɵtemplate(6, NovoControlTemplates_ng_template_6_Template, 2, 10, "ng-template", 6);
        ɵngcc0.ɵɵtemplate(7, NovoControlTemplates_ng_template_7_Template, 4, 4, "ng-template", 7);
        ɵngcc0.ɵɵtemplate(8, NovoControlTemplates_ng_template_8_Template, 2, 11, "ng-template", 8);
        ɵngcc0.ɵɵtemplate(9, NovoControlTemplates_ng_template_9_Template, 2, 2, "ng-template", 9);
        ɵngcc0.ɵɵtemplate(10, NovoControlTemplates_ng_template_10_Template, 2, 12, "ng-template", 10);
        ɵngcc0.ɵɵtemplate(11, NovoControlTemplates_ng_template_11_Template, 2, 17, "ng-template", 11);
        ɵngcc0.ɵɵtemplate(12, NovoControlTemplates_ng_template_12_Template, 2, 15, "ng-template", 12);
        ɵngcc0.ɵɵtemplate(13, NovoControlTemplates_ng_template_13_Template, 2, 4, "ng-template", 13);
        ɵngcc0.ɵɵtemplate(14, NovoControlTemplates_ng_template_14_Template, 2, 11, "ng-template", 14);
        ɵngcc0.ɵɵtemplate(15, NovoControlTemplates_ng_template_15_Template, 2, 10, "ng-template", 15);
        ɵngcc0.ɵɵtemplate(16, NovoControlTemplates_ng_template_16_Template, 2, 11, "ng-template", 16);
    } }, directives: [ɵngcc2.NovoTemplate, ɵngcc3.NgControlStatusGroup, ɵngcc3.FormGroupDirective, ɵngcc4.TooltipDirective, ɵngcc5.NgIf, ɵngcc3.DefaultValueAccessor, ɵngcc6.MaskedInputDirective, ɵngcc3.NgControlStatus, ɵngcc3.FormControlName, ɵngcc3.MaxLengthValidator, ɵngcc7.NovoAutoSize, ɵngcc8.NovoCKEditorElement, ɵngcc3.SelectControlValueAccessor, ɵngcc5.NgForOf, ɵngcc3.NgSelectOption, ɵngcc3.ɵangular_packages_forms_forms_x, ɵngcc9.NovoFileInputElement, ɵngcc10.NovoTilesElement, ɵngcc11.NovoPickerElement, ɵngcc12.NovoChipsElement, ɵngcc13.NovoRowChipsElement, ɵngcc14.NovoSelectElement, ɵngcc15.NovoRadioElement, ɵngcc16.NovoTimePickerInputElement, ɵngcc17.NovoDatePickerInputElement, ɵngcc18.NovoDateTimePickerInputElement, ɵngcc19.NovoAddressElement, ɵngcc20.NovoCheckboxElement, ɵngcc21.NovoCheckListElement, ɵngcc22.QuickNoteElement], encapsulation: 2 });
NovoControlTemplates.ctorParameters = () => [
    { type: NovoTemplateService }
];
NovoControlTemplates.propDecorators = {
    defaultTemplates: [{ type: ViewChildren, args: [NovoTemplate,] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NovoControlTemplates, [{
        type: Component,
        args: [{
                selector: 'novo-control-templates',
                template: `
        <!---Readonly--->
        <ng-template novoTemplate="read-only" let-form="form" let-control>
          <div>{{ form.value[control.key] }}</div>
        </ng-template>
        <!--Textbox--->
        <ng-template novoTemplate="textbox" let-control let-form="form" let-errors="errors" let-methods="methods">
          <div [formGroup]="form" class="novo-control-input-container novo-control-input-with-label" [tooltip]="control?.tooltip" [tooltipPosition]="control?.tooltipPosition"  [tooltipSize]="control?.tooltipSize" [tooltipPreline]="control?.tooltipPreline" [removeTooltipArrow]="control?.removeTooltipArrow" [tooltipAutoPosition]="control?.tooltipAutoPosition">
            <input *ngIf="control?.type !== 'number' && control?.textMaskEnabled" [textMask]="control.maskOptions" [formControlName]="control.key" [id]="control.key" [type]="control?.type" [placeholder]="control?.placeholder" (input)="methods.emitChange($event)" (focus)="methods.handleFocus($event)" (blur)="methods.handleBlur($event)" autocomplete>
            <input *ngIf="control?.type !== 'number' && !control?.textMaskEnabled" [class.maxlength-error]="errors?.maxlength" [formControlName]="control.key" [id]="control.key" [type]="control?.type" [placeholder]="control?.placeholder" (input)="methods.emitChange($event)" [maxlength]="control?.maxlength" (focus)="methods.handleFocus($event)" (blur)="methods.handleBlur($event)" autocomplete>
            <input *ngIf="control?.type === 'number' && control?.subType !== 'percentage'" [class.maxlength-error]="errors?.maxlength" [formControlName]="control.key" [id]="control.key" [type]="control?.type" [placeholder]="control?.placeholder" (keydown)="methods.restrictKeys($event)" (input)="methods.emitChange($event)" [maxlength]="control?.maxlength" (focus)="methods.handleFocus($event)" (blur)="methods.handleBlur($event)" step="any" (mousewheel)="numberInput.blur()" #numberInput>
            <!-- the percentage input does not use formControlName like a normal reactive input because instead of setting the floating point value directly, it is multiplied by 100 into a percentage value -->
            <input *ngIf="control?.type === 'number' && control?.subType === 'percentage'" [id]="control.key" [type]="control?.type" [placeholder]="control?.placeholder" (keydown)="methods.restrictKeys($event)" [value]="control?.percentValue" [disabled]="control?.readOnly" (input)="methods.handlePercentChange($event)" (focus)="methods.handleFocus($event)" (blur)="methods.handleBlur($event)" step="any" (mousewheel)="percentInput.blur()" #percentInput>
            <label class="input-label" *ngIf="control?.subType === 'currency'">{{ control.currencyFormat }}</label>
            <label class="input-label" *ngIf="control?.subType === 'percentage'">%</label>
          </div>
        </ng-template>

        <!--Textarea--->
        <ng-template novoTemplate="text-area" let-control let-form="form" let-errors="errors" let-methods="methods">
          <div class="textarea-container" [formGroup]="form" [tooltip]="control?.tooltip" [tooltipPosition]="control?.tooltipPosition"  [tooltipSize]="control?.tooltipSize" [tooltipPreline]="control?.tooltipPreline" [removeTooltipArrow]="control?.removeTooltipArrow" [tooltipAutoPosition]="control?.tooltipAutoPosition">
            <textarea [class.maxlength-error]="errors?.maxlength" [name]="control.key" [attr.id]="control.key" [placeholder]="control.placeholder" [formControlName]="control.key" autosize (input)="methods.handleTextAreaInput($event)" (focus)="methods.handleFocus($event)" (blur)="methods.handleBlur($event)" [maxlength]="control?.maxlength"></textarea>
          </div>
        </ng-template>

        <!--Editor-->
        <ng-template novoTemplate="editor" let-control let-form="form" let-errors="errors" let-methods="methods">
          <div [formGroup]="form">
            <novo-editor [name]="control.key" [formControlName]="control.key" [startupFocus]="control.startupFocus" [minimal]="control.minimal" [fileBrowserImageUploadUrl]="control.fileBrowserImageUploadUrl" (focus)="methods.handleFocus($event)" (blur)="methods.handleBlur($event)" [config]="control.config"></novo-editor>
          </div>
        </ng-template>

        <!--HTML5 Select-->
        <ng-template novoTemplate="native-select" let-control let-form="form" let-errors="errors" let-methods="methods">
          <div [formGroup]="form">
            <select [id]="control.key" [formControlName]="control.key" [tooltip]="control.tooltip" [tooltipPosition]="control.tooltipPosition"  [tooltipSize]="control?.tooltipSize" [tooltipPreline]="control?.tooltipPreline" [removeTooltipArrow]="control?.removeTooltipArrow" [tooltipAutoPosition]="control?.tooltipAutoPosition">
                <option *ngIf="control.placeholder" value="" disabled selected hidden>{{ control.placeholder }}</option>
                <option *ngFor="let opt of control.options" [value]="opt.key">{{opt.value}}</option>
            </select>
          </div>
        </ng-template>

        <!--File-->
        <ng-template novoTemplate="file" let-control let-form="form" let-errors="errors" let-methods="methods">
          <div [formGroup]="form">
            <novo-file-input [formControlName]="control.key" [id]="control.key" [name]="control.key" [placeholder]="control.placeholder" [value]="control.value" [multiple]="control.multiple" [layoutOptions]="control.layoutOptions" [tooltip]="control.tooltip" [tooltipPosition]="control.tooltipPosition"  [tooltipSize]="control?.tooltipSize" [tooltipPreline]="control?.tooltipPreline" [removeTooltipArrow]="control?.removeTooltipArrow" [tooltipAutoPosition]="control?.tooltipAutoPosition" (edit)="methods.handleEdit($event)" (save)="methods.handleSave($event)" (delete)="methods.handleDelete($event)" (upload)="methods.handleUpload($event)"></novo-file-input>
          </div>
        </ng-template>

        <!--Tiles-->
        <ng-template novoTemplate="tiles" let-control let-form="form" let-errors="errors" let-methods="methods">
          <div [formGroup]="form">
            <novo-tiles [options]="control.options" [formControlName]="control.key" (onChange)="methods.modelChange($event)" [tooltip]="control.tooltip" [tooltipPosition]="control.tooltipPosition"  [tooltipSize]="control?.tooltipSize" [tooltipPreline]="control?.tooltipPreline" [removeTooltipArrow]="control?.removeTooltipArrow" [tooltipAutoPosition]="control?.tooltipAutoPosition" [controlDisabled]="control.disabled"></novo-tiles>
          </div>
        </ng-template>

        <!--Picker-->
        <ng-template novoTemplate="picker" let-control let-form="form" let-errors="errors" let-methods="methods">
          <div [formGroup]="form" class="novo-control-input-container">
            <novo-picker [config]="control.config" [formControlName]="control.key" [placeholder]="control.placeholder" [parentScrollSelector]="control.parentScrollSelector" *ngIf="!control.multiple" (select)="methods.modelChange($event);" (changed)="methods.modelChangeWithRaw($event)" (typing)="methods.handleTyping($event)" (focus)="methods.handleFocus($event)" (blur)="methods.handleBlur($event)" [tooltip]="control.tooltip" [tooltipPosition]="control.tooltipPosition" [tooltipSize]="control?.tooltipSize" [tooltipPreline]="control?.tooltipPreline" [removeTooltipArrow]="control?.removeTooltipArrow" [tooltipAutoPosition]="control?.tooltipAutoPosition"></novo-picker>
            <novo-chips [source]="control.config" [type]="control.config.type" [formControlName]="control.key" [placeholder]="control.placeholder" [maxlength]="control?.maxlength" *ngIf="control.multiple && !control.config.columns" [closeOnSelect]="control.closeOnSelect" (changed)="methods.modelChangeWithRaw($event)" (typing)="methods.handleTyping($event)" (focus)="methods.handleFocus($event)" (blur)="methods.handleBlur($event)" [tooltip]="control.tooltip" [tooltipPosition]="control.tooltipPosition" [tooltipSize]="control?.tooltipSize" [tooltipPreline]="control?.tooltipPreline" [removeTooltipArrow]="control?.removeTooltipArrow" [tooltipAutoPosition]="control?.tooltipAutoPosition"></novo-chips>
            <novo-row-chips [source]="control.config" [type]="control.config.type" [formControlName]="control.key" [placeholder]="control.placeholder" *ngIf="control.multiple && control.config.columns" [closeOnSelect]="control.closeOnSelect" (changed)="methods.modelChangeWithRaw($event)" (typing)="methods.handleTyping($event)" (focus)="methods.handleFocus($event)" (blur)="methods.handleBlur($event)" [tooltip]="control.tooltip" [tooltipPosition]="control.tooltipPosition" [tooltipSize]="control?.tooltipSize" [tooltipPreline]="control?.tooltipPreline" [removeTooltipArrow]="control?.removeTooltipArrow" [tooltipAutoPosition]="control?.tooltipAutoPosition"></novo-row-chips>
          </div>
        </ng-template>

        <!--Novo Select-->
        <ng-template novoTemplate="select" let-control let-form="form" let-errors="errors" let-methods="methods">
          <div [formGroup]="form">
            <novo-select [options]="control.options" [headerConfig]="control.headerConfig" [placeholder]="control.placeholder" [formControlName]="control.key" [tooltip]="control.tooltip" [tooltipPosition]="control.tooltipPosition" [tooltipSize]="control?.tooltipSize" [tooltipPreline]="control?.tooltipPreline" [removeTooltipArrow]="control?.removeTooltipArrow" [tooltipAutoPosition]="control?.tooltipAutoPosition" (onSelect)="methods.modelChange($event)"></novo-select>
          </div>
        </ng-template>

        <!--Radio-->
        <ng-template novoTemplate="radio" let-control let-form="form" let-errors="errors" let-methods="methods">
          <div [formGroup]="form" class="novo-control-input-container">
            <novo-radio [name]="control.key" [formControlName]="control.key" *ngFor="let option of control.options" [value]="option.value" [label]="option.label" [checked]="option.value === form.value[control.key] || (form.value[control.key] && option.value === form.value[control.key].id)" [tooltip]="control.tooltip" [tooltipPosition]="control.tooltipPosition" [tooltipSize]="control?.tooltipSize" [tooltipPreline]="control?.tooltipPreline" [removeTooltipArrow]="control?.removeTooltipArrow" [tooltipAutoPosition]="control?.tooltipAutoPosition" [button]="!!option.icon" [icon]="option.icon" [attr.data-automation-id]="control.key + '-' + (option?.label || option?.value)"></novo-radio>
          </div>
        </ng-template>

        <!--Time-->
        <ng-template novoTemplate="time" let-control let-form="form" let-errors="errors" let-methods="methods">
          <div [formGroup]="form" class="novo-control-input-container" [tooltip]="control?.tooltip" [tooltipPosition]="control?.tooltipPosition" [tooltipSize]="control?.tooltipSize" [tooltipPreline]="control?.tooltipPreline" [removeTooltipArrow]="control?.removeTooltipArrow" [tooltipAutoPosition]="control?.tooltipAutoPosition">
            <novo-time-picker-input [attr.id]="control.key" [name]="control.key" [formControlName]="control.key" [placeholder]="control.placeholder" [military]="control.military"></novo-time-picker-input>
          </div>
        </ng-template>

        <!--Date-->
        <ng-template novoTemplate="date" let-control let-form="form" let-errors="errors" let-methods="methods">
          <div [formGroup]="form" class="novo-control-input-container" [tooltip]="control.tooltip" [tooltipPosition]="control.tooltipPosition" [tooltipSize]="control?.tooltipSize" [tooltipPreline]="control?.tooltipPreline" [removeTooltipArrow]="control?.removeTooltipArrow" [tooltipAutoPosition]="control?.tooltipAutoPosition">
            <novo-date-picker-input [attr.id]="control.key" [name]="control.key" [formControlName]="control.key" [start]="control.startDate" [end]="control.endDate" [format]="control.dateFormat" [allowInvalidDate]="control.allowInvalidDate" [textMaskEnabled]="control.textMaskEnabled" [placeholder]="control.placeholder" [weekStart]="control.weekStart" (focusEvent)="methods.handleFocus($event)" (blurEvent)="methods.handleBlur($event)" (changeEvent)="methods.emitChange($event)"></novo-date-picker-input>
          </div>
        </ng-template>

        <!--Date and Time-->
        <ng-template novoTemplate="date-time" let-control let-form="form" let-errors="errors" let-methods="methods">
          <div [formGroup]="form" class="novo-control-input-container" [tooltip]="control.tooltip" [tooltipPosition]="control.tooltipPosition" [tooltipSize]="control?.tooltipSize" [tooltipPreline]="control?.tooltipPreline" [removeTooltipArrow]="control?.removeTooltipArrow" [tooltipAutoPosition]="control?.tooltipAutoPosition">
            <novo-date-time-picker-input [attr.id]="control.key" [name]="control.key" [formControlName]="control.key" [start]="control.startDate" [end]="control.endDate" [placeholder]="control.placeholder" [military]="control.military" [weekStart]="control.weekStart" (focusEvent)="methods.handleFocus($event)" (blurEvent)="methods.handleBlur($event)" (changeEvent)="methods.emitChange($event)" ></novo-date-time-picker-input>
          </div>
        </ng-template>

        <!--Address-->
        <ng-template novoTemplate="address" let-control let-form="form" let-errors="errors" let-methods="methods">
          <div [formGroup]="form">
            <novo-address [formControlName]="control.key" [config]="control?.config" [readOnly]="control?.readOnly" (change)="methods.handleAddressChange($event)" (focus)="methods.handleFocus($event.event, $event.field)" (blur)="methods.handleBlur($event.event, $event.field)"  (validityChange)="methods.updateValidity()"></novo-address>
          </div>
        </ng-template>

        <!--Checkbox-->
        <ng-template novoTemplate="checkbox" let-control let-form="form" let-errors="errors" let-methods="methods">
          <div [formGroup]="form">
            <novo-checkbox [formControlName]="control?.key" [name]="control?.key" [label]="control?.checkboxLabel" [tooltip]="control?.tooltip" [tooltipPosition]="control?.tooltipPosition" [tooltipSize]="control?.tooltipSize" [tooltipPreline]="control?.tooltipPreline" [removeTooltipArrow]="control?.removeTooltipArrow" [tooltipAutoPosition]="control?.tooltipAutoPosition" [layoutOptions]="control?.layoutOptions"></novo-checkbox>
          </div>
        </ng-template>

        <!--Checklist-->
        <ng-template novoTemplate="checklist" let-control let-form="form" let-errors="errors" let-methods="methods">
          <div [formGroup]="form">
            <novo-check-list [formControlName]="control.key" [name]="control.key" [options]="control?.options" [tooltip]="control?.tooltip" [tooltipPosition]="control?.tooltipPosition" [tooltipSize]="control?.tooltipSize" [tooltipPreline]="control?.tooltipPreline" [removeTooltipArrow]="control?.removeTooltipArrow" [tooltipAutoPosition]="control?.tooltipAutoPosition" (onSelect)="methods.modelChange($event)"></novo-check-list>
          </div>
        </ng-template>

        <!--QuickNote-->
        <ng-template novoTemplate="quick-note" let-control let-form="form" let-errors="errors" let-methods="methods">
          <div [formGroup]="form">
            <novo-quick-note [formControlName]="control.key" [startupFocus]="control?.startupFocus" [placeholder]="control?.placeholder" [config]="control?.config" (change)="methods.modelChange($event)" [tooltip]="control?.tooltip" [tooltipPosition]="control?.tooltipPosition" [tooltipSize]="control?.tooltipSize" [removeTooltipArrow]="control?.removeTooltipArrow" [tooltipAutoPosition]="control?.tooltipAutoPosition" [tooltipPreline]="control?.tooltipPreline"></novo-quick-note>
          </div>
        </ng-template>
    `
            }]
    }], function () { return [{ type: ɵngcc1.NovoTemplateService }]; }, { defaultTemplates: [{
            type: ViewChildren,
            args: [NovoTemplate]
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29udHJvbFRlbXBsYXRlcy5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcnVubmVyL3dvcmsvbm92by1lbGVtZW50cy9ub3ZvLWVsZW1lbnRzL3Byb2plY3RzL25vdm8tZWxlbWVudHMvc3JjL2VsZW1lbnRzL2Zvcm0vQ29udHJvbFRlbXBsYXRlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQWlCLFNBQVMsRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2xGLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLDZDQUE2QyxDQUFDO0FBQ2xGLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpREFBaUQsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBcUkvRSxNQUFNLE9BQU8sb0JBQW9CO0FBQUcsSUFHbEMsWUFBb0IsU0FBOEI7QUFBSSxRQUFsQyxjQUFTLEdBQVQsU0FBUyxDQUFxQjtBQUFDLElBQUcsQ0FBQztBQUN6RCxJQUNFLGVBQWU7QUFBSyxRQUNsQixJQUFJLElBQUksQ0FBQyxnQkFBZ0IsSUFBSSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsTUFBTSxFQUFFO0FBQy9ELFlBQU0sSUFBSSxDQUFDLGdCQUFnQixDQUFDLE9BQU8sQ0FBQyxDQUFDLFFBQWEsRUFBRSxFQUFFO0FBQ3RELGdCQUFRLElBQUksQ0FBQyxTQUFTLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsUUFBUSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQ3BFLFlBQU0sQ0FBQyxDQUFDLENBQUM7QUFDVCxTQUFLO0FBQ0wsSUFBRSxDQUFDO0FBQ0g7Z0RBL0lDLFNBQVMsU0FBQyxrQkFDVCxRQUFRLEVBQUUsd0JBQXdCLGtCQUNsQyxRQUFRLEVBQUU7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztxMkJBaUlQO0FBQUM7QUFBOEMsWUF0STNDLG1CQUFtQjtBQUFHO0FBQUc7QUFBd0MsK0JBdUl2RSxZQUFZLFNBQUMsWUFBWTtBQUN4Qjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O3lCQUpDLGNBQ0o7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQUdLO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBZnRlclZpZXdJbml0LCBDb21wb25lbnQsIFF1ZXJ5TGlzdCwgVmlld0NoaWxkcmVuIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOb3ZvVGVtcGxhdGVTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvdGVtcGxhdGUvTm92b1RlbXBsYXRlU2VydmljZSc7XG5pbXBvcnQgeyBOb3ZvVGVtcGxhdGUgfSBmcm9tICcuLi9jb21tb24vbm92by10ZW1wbGF0ZS9ub3ZvLXRlbXBsYXRlLmRpcmVjdGl2ZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ25vdm8tY29udHJvbC10ZW1wbGF0ZXMnLFxuICB0ZW1wbGF0ZTogYFxuICAgICAgICA8IS0tLVJlYWRvbmx5LS0tPlxuICAgICAgICA8bmctdGVtcGxhdGUgbm92b1RlbXBsYXRlPVwicmVhZC1vbmx5XCIgbGV0LWZvcm09XCJmb3JtXCIgbGV0LWNvbnRyb2w+XG4gICAgICAgICAgPGRpdj57eyBmb3JtLnZhbHVlW2NvbnRyb2wua2V5XSB9fTwvZGl2PlxuICAgICAgICA8L25nLXRlbXBsYXRlPlxuICAgICAgICA8IS0tVGV4dGJveC0tLT5cbiAgICAgICAgPG5nLXRlbXBsYXRlIG5vdm9UZW1wbGF0ZT1cInRleHRib3hcIiBsZXQtY29udHJvbCBsZXQtZm9ybT1cImZvcm1cIiBsZXQtZXJyb3JzPVwiZXJyb3JzXCIgbGV0LW1ldGhvZHM9XCJtZXRob2RzXCI+XG4gICAgICAgICAgPGRpdiBbZm9ybUdyb3VwXT1cImZvcm1cIiBjbGFzcz1cIm5vdm8tY29udHJvbC1pbnB1dC1jb250YWluZXIgbm92by1jb250cm9sLWlucHV0LXdpdGgtbGFiZWxcIiBbdG9vbHRpcF09XCJjb250cm9sPy50b29sdGlwXCIgW3Rvb2x0aXBQb3NpdGlvbl09XCJjb250cm9sPy50b29sdGlwUG9zaXRpb25cIiAgW3Rvb2x0aXBTaXplXT1cImNvbnRyb2w/LnRvb2x0aXBTaXplXCIgW3Rvb2x0aXBQcmVsaW5lXT1cImNvbnRyb2w/LnRvb2x0aXBQcmVsaW5lXCIgW3JlbW92ZVRvb2x0aXBBcnJvd109XCJjb250cm9sPy5yZW1vdmVUb29sdGlwQXJyb3dcIiBbdG9vbHRpcEF1dG9Qb3NpdGlvbl09XCJjb250cm9sPy50b29sdGlwQXV0b1Bvc2l0aW9uXCI+XG4gICAgICAgICAgICA8aW5wdXQgKm5nSWY9XCJjb250cm9sPy50eXBlICE9PSAnbnVtYmVyJyAmJiBjb250cm9sPy50ZXh0TWFza0VuYWJsZWRcIiBbdGV4dE1hc2tdPVwiY29udHJvbC5tYXNrT3B0aW9uc1wiIFtmb3JtQ29udHJvbE5hbWVdPVwiY29udHJvbC5rZXlcIiBbaWRdPVwiY29udHJvbC5rZXlcIiBbdHlwZV09XCJjb250cm9sPy50eXBlXCIgW3BsYWNlaG9sZGVyXT1cImNvbnRyb2w/LnBsYWNlaG9sZGVyXCIgKGlucHV0KT1cIm1ldGhvZHMuZW1pdENoYW5nZSgkZXZlbnQpXCIgKGZvY3VzKT1cIm1ldGhvZHMuaGFuZGxlRm9jdXMoJGV2ZW50KVwiIChibHVyKT1cIm1ldGhvZHMuaGFuZGxlQmx1cigkZXZlbnQpXCIgYXV0b2NvbXBsZXRlPlxuICAgICAgICAgICAgPGlucHV0ICpuZ0lmPVwiY29udHJvbD8udHlwZSAhPT0gJ251bWJlcicgJiYgIWNvbnRyb2w/LnRleHRNYXNrRW5hYmxlZFwiIFtjbGFzcy5tYXhsZW5ndGgtZXJyb3JdPVwiZXJyb3JzPy5tYXhsZW5ndGhcIiBbZm9ybUNvbnRyb2xOYW1lXT1cImNvbnRyb2wua2V5XCIgW2lkXT1cImNvbnRyb2wua2V5XCIgW3R5cGVdPVwiY29udHJvbD8udHlwZVwiIFtwbGFjZWhvbGRlcl09XCJjb250cm9sPy5wbGFjZWhvbGRlclwiIChpbnB1dCk9XCJtZXRob2RzLmVtaXRDaGFuZ2UoJGV2ZW50KVwiIFttYXhsZW5ndGhdPVwiY29udHJvbD8ubWF4bGVuZ3RoXCIgKGZvY3VzKT1cIm1ldGhvZHMuaGFuZGxlRm9jdXMoJGV2ZW50KVwiIChibHVyKT1cIm1ldGhvZHMuaGFuZGxlQmx1cigkZXZlbnQpXCIgYXV0b2NvbXBsZXRlPlxuICAgICAgICAgICAgPGlucHV0ICpuZ0lmPVwiY29udHJvbD8udHlwZSA9PT0gJ251bWJlcicgJiYgY29udHJvbD8uc3ViVHlwZSAhPT0gJ3BlcmNlbnRhZ2UnXCIgW2NsYXNzLm1heGxlbmd0aC1lcnJvcl09XCJlcnJvcnM/Lm1heGxlbmd0aFwiIFtmb3JtQ29udHJvbE5hbWVdPVwiY29udHJvbC5rZXlcIiBbaWRdPVwiY29udHJvbC5rZXlcIiBbdHlwZV09XCJjb250cm9sPy50eXBlXCIgW3BsYWNlaG9sZGVyXT1cImNvbnRyb2w/LnBsYWNlaG9sZGVyXCIgKGtleWRvd24pPVwibWV0aG9kcy5yZXN0cmljdEtleXMoJGV2ZW50KVwiIChpbnB1dCk9XCJtZXRob2RzLmVtaXRDaGFuZ2UoJGV2ZW50KVwiIFttYXhsZW5ndGhdPVwiY29udHJvbD8ubWF4bGVuZ3RoXCIgKGZvY3VzKT1cIm1ldGhvZHMuaGFuZGxlRm9jdXMoJGV2ZW50KVwiIChibHVyKT1cIm1ldGhvZHMuaGFuZGxlQmx1cigkZXZlbnQpXCIgc3RlcD1cImFueVwiIChtb3VzZXdoZWVsKT1cIm51bWJlcklucHV0LmJsdXIoKVwiICNudW1iZXJJbnB1dD5cbiAgICAgICAgICAgIDwhLS0gdGhlIHBlcmNlbnRhZ2UgaW5wdXQgZG9lcyBub3QgdXNlIGZvcm1Db250cm9sTmFtZSBsaWtlIGEgbm9ybWFsIHJlYWN0aXZlIGlucHV0IGJlY2F1c2UgaW5zdGVhZCBvZiBzZXR0aW5nIHRoZSBmbG9hdGluZyBwb2ludCB2YWx1ZSBkaXJlY3RseSwgaXQgaXMgbXVsdGlwbGllZCBieSAxMDAgaW50byBhIHBlcmNlbnRhZ2UgdmFsdWUgLS0+XG4gICAgICAgICAgICA8aW5wdXQgKm5nSWY9XCJjb250cm9sPy50eXBlID09PSAnbnVtYmVyJyAmJiBjb250cm9sPy5zdWJUeXBlID09PSAncGVyY2VudGFnZSdcIiBbaWRdPVwiY29udHJvbC5rZXlcIiBbdHlwZV09XCJjb250cm9sPy50eXBlXCIgW3BsYWNlaG9sZGVyXT1cImNvbnRyb2w/LnBsYWNlaG9sZGVyXCIgKGtleWRvd24pPVwibWV0aG9kcy5yZXN0cmljdEtleXMoJGV2ZW50KVwiIFt2YWx1ZV09XCJjb250cm9sPy5wZXJjZW50VmFsdWVcIiBbZGlzYWJsZWRdPVwiY29udHJvbD8ucmVhZE9ubHlcIiAoaW5wdXQpPVwibWV0aG9kcy5oYW5kbGVQZXJjZW50Q2hhbmdlKCRldmVudClcIiAoZm9jdXMpPVwibWV0aG9kcy5oYW5kbGVGb2N1cygkZXZlbnQpXCIgKGJsdXIpPVwibWV0aG9kcy5oYW5kbGVCbHVyKCRldmVudClcIiBzdGVwPVwiYW55XCIgKG1vdXNld2hlZWwpPVwicGVyY2VudElucHV0LmJsdXIoKVwiICNwZXJjZW50SW5wdXQ+XG4gICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJpbnB1dC1sYWJlbFwiICpuZ0lmPVwiY29udHJvbD8uc3ViVHlwZSA9PT0gJ2N1cnJlbmN5J1wiPnt7IGNvbnRyb2wuY3VycmVuY3lGb3JtYXQgfX08L2xhYmVsPlxuICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwiaW5wdXQtbGFiZWxcIiAqbmdJZj1cImNvbnRyb2w/LnN1YlR5cGUgPT09ICdwZXJjZW50YWdlJ1wiPiU8L2xhYmVsPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L25nLXRlbXBsYXRlPlxuXG4gICAgICAgIDwhLS1UZXh0YXJlYS0tLT5cbiAgICAgICAgPG5nLXRlbXBsYXRlIG5vdm9UZW1wbGF0ZT1cInRleHQtYXJlYVwiIGxldC1jb250cm9sIGxldC1mb3JtPVwiZm9ybVwiIGxldC1lcnJvcnM9XCJlcnJvcnNcIiBsZXQtbWV0aG9kcz1cIm1ldGhvZHNcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwidGV4dGFyZWEtY29udGFpbmVyXCIgW2Zvcm1Hcm91cF09XCJmb3JtXCIgW3Rvb2x0aXBdPVwiY29udHJvbD8udG9vbHRpcFwiIFt0b29sdGlwUG9zaXRpb25dPVwiY29udHJvbD8udG9vbHRpcFBvc2l0aW9uXCIgIFt0b29sdGlwU2l6ZV09XCJjb250cm9sPy50b29sdGlwU2l6ZVwiIFt0b29sdGlwUHJlbGluZV09XCJjb250cm9sPy50b29sdGlwUHJlbGluZVwiIFtyZW1vdmVUb29sdGlwQXJyb3ddPVwiY29udHJvbD8ucmVtb3ZlVG9vbHRpcEFycm93XCIgW3Rvb2x0aXBBdXRvUG9zaXRpb25dPVwiY29udHJvbD8udG9vbHRpcEF1dG9Qb3NpdGlvblwiPlxuICAgICAgICAgICAgPHRleHRhcmVhIFtjbGFzcy5tYXhsZW5ndGgtZXJyb3JdPVwiZXJyb3JzPy5tYXhsZW5ndGhcIiBbbmFtZV09XCJjb250cm9sLmtleVwiIFthdHRyLmlkXT1cImNvbnRyb2wua2V5XCIgW3BsYWNlaG9sZGVyXT1cImNvbnRyb2wucGxhY2Vob2xkZXJcIiBbZm9ybUNvbnRyb2xOYW1lXT1cImNvbnRyb2wua2V5XCIgYXV0b3NpemUgKGlucHV0KT1cIm1ldGhvZHMuaGFuZGxlVGV4dEFyZWFJbnB1dCgkZXZlbnQpXCIgKGZvY3VzKT1cIm1ldGhvZHMuaGFuZGxlRm9jdXMoJGV2ZW50KVwiIChibHVyKT1cIm1ldGhvZHMuaGFuZGxlQmx1cigkZXZlbnQpXCIgW21heGxlbmd0aF09XCJjb250cm9sPy5tYXhsZW5ndGhcIj48L3RleHRhcmVhPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L25nLXRlbXBsYXRlPlxuXG4gICAgICAgIDwhLS1FZGl0b3ItLT5cbiAgICAgICAgPG5nLXRlbXBsYXRlIG5vdm9UZW1wbGF0ZT1cImVkaXRvclwiIGxldC1jb250cm9sIGxldC1mb3JtPVwiZm9ybVwiIGxldC1lcnJvcnM9XCJlcnJvcnNcIiBsZXQtbWV0aG9kcz1cIm1ldGhvZHNcIj5cbiAgICAgICAgICA8ZGl2IFtmb3JtR3JvdXBdPVwiZm9ybVwiPlxuICAgICAgICAgICAgPG5vdm8tZWRpdG9yIFtuYW1lXT1cImNvbnRyb2wua2V5XCIgW2Zvcm1Db250cm9sTmFtZV09XCJjb250cm9sLmtleVwiIFtzdGFydHVwRm9jdXNdPVwiY29udHJvbC5zdGFydHVwRm9jdXNcIiBbbWluaW1hbF09XCJjb250cm9sLm1pbmltYWxcIiBbZmlsZUJyb3dzZXJJbWFnZVVwbG9hZFVybF09XCJjb250cm9sLmZpbGVCcm93c2VySW1hZ2VVcGxvYWRVcmxcIiAoZm9jdXMpPVwibWV0aG9kcy5oYW5kbGVGb2N1cygkZXZlbnQpXCIgKGJsdXIpPVwibWV0aG9kcy5oYW5kbGVCbHVyKCRldmVudClcIiBbY29uZmlnXT1cImNvbnRyb2wuY29uZmlnXCI+PC9ub3ZvLWVkaXRvcj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9uZy10ZW1wbGF0ZT5cblxuICAgICAgICA8IS0tSFRNTDUgU2VsZWN0LS0+XG4gICAgICAgIDxuZy10ZW1wbGF0ZSBub3ZvVGVtcGxhdGU9XCJuYXRpdmUtc2VsZWN0XCIgbGV0LWNvbnRyb2wgbGV0LWZvcm09XCJmb3JtXCIgbGV0LWVycm9ycz1cImVycm9yc1wiIGxldC1tZXRob2RzPVwibWV0aG9kc1wiPlxuICAgICAgICAgIDxkaXYgW2Zvcm1Hcm91cF09XCJmb3JtXCI+XG4gICAgICAgICAgICA8c2VsZWN0IFtpZF09XCJjb250cm9sLmtleVwiIFtmb3JtQ29udHJvbE5hbWVdPVwiY29udHJvbC5rZXlcIiBbdG9vbHRpcF09XCJjb250cm9sLnRvb2x0aXBcIiBbdG9vbHRpcFBvc2l0aW9uXT1cImNvbnRyb2wudG9vbHRpcFBvc2l0aW9uXCIgIFt0b29sdGlwU2l6ZV09XCJjb250cm9sPy50b29sdGlwU2l6ZVwiIFt0b29sdGlwUHJlbGluZV09XCJjb250cm9sPy50b29sdGlwUHJlbGluZVwiIFtyZW1vdmVUb29sdGlwQXJyb3ddPVwiY29udHJvbD8ucmVtb3ZlVG9vbHRpcEFycm93XCIgW3Rvb2x0aXBBdXRvUG9zaXRpb25dPVwiY29udHJvbD8udG9vbHRpcEF1dG9Qb3NpdGlvblwiPlxuICAgICAgICAgICAgICAgIDxvcHRpb24gKm5nSWY9XCJjb250cm9sLnBsYWNlaG9sZGVyXCIgdmFsdWU9XCJcIiBkaXNhYmxlZCBzZWxlY3RlZCBoaWRkZW4+e3sgY29udHJvbC5wbGFjZWhvbGRlciB9fTwvb3B0aW9uPlxuICAgICAgICAgICAgICAgIDxvcHRpb24gKm5nRm9yPVwibGV0IG9wdCBvZiBjb250cm9sLm9wdGlvbnNcIiBbdmFsdWVdPVwib3B0LmtleVwiPnt7b3B0LnZhbHVlfX08L29wdGlvbj5cbiAgICAgICAgICAgIDwvc2VsZWN0PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L25nLXRlbXBsYXRlPlxuXG4gICAgICAgIDwhLS1GaWxlLS0+XG4gICAgICAgIDxuZy10ZW1wbGF0ZSBub3ZvVGVtcGxhdGU9XCJmaWxlXCIgbGV0LWNvbnRyb2wgbGV0LWZvcm09XCJmb3JtXCIgbGV0LWVycm9ycz1cImVycm9yc1wiIGxldC1tZXRob2RzPVwibWV0aG9kc1wiPlxuICAgICAgICAgIDxkaXYgW2Zvcm1Hcm91cF09XCJmb3JtXCI+XG4gICAgICAgICAgICA8bm92by1maWxlLWlucHV0IFtmb3JtQ29udHJvbE5hbWVdPVwiY29udHJvbC5rZXlcIiBbaWRdPVwiY29udHJvbC5rZXlcIiBbbmFtZV09XCJjb250cm9sLmtleVwiIFtwbGFjZWhvbGRlcl09XCJjb250cm9sLnBsYWNlaG9sZGVyXCIgW3ZhbHVlXT1cImNvbnRyb2wudmFsdWVcIiBbbXVsdGlwbGVdPVwiY29udHJvbC5tdWx0aXBsZVwiIFtsYXlvdXRPcHRpb25zXT1cImNvbnRyb2wubGF5b3V0T3B0aW9uc1wiIFt0b29sdGlwXT1cImNvbnRyb2wudG9vbHRpcFwiIFt0b29sdGlwUG9zaXRpb25dPVwiY29udHJvbC50b29sdGlwUG9zaXRpb25cIiAgW3Rvb2x0aXBTaXplXT1cImNvbnRyb2w/LnRvb2x0aXBTaXplXCIgW3Rvb2x0aXBQcmVsaW5lXT1cImNvbnRyb2w/LnRvb2x0aXBQcmVsaW5lXCIgW3JlbW92ZVRvb2x0aXBBcnJvd109XCJjb250cm9sPy5yZW1vdmVUb29sdGlwQXJyb3dcIiBbdG9vbHRpcEF1dG9Qb3NpdGlvbl09XCJjb250cm9sPy50b29sdGlwQXV0b1Bvc2l0aW9uXCIgKGVkaXQpPVwibWV0aG9kcy5oYW5kbGVFZGl0KCRldmVudClcIiAoc2F2ZSk9XCJtZXRob2RzLmhhbmRsZVNhdmUoJGV2ZW50KVwiIChkZWxldGUpPVwibWV0aG9kcy5oYW5kbGVEZWxldGUoJGV2ZW50KVwiICh1cGxvYWQpPVwibWV0aG9kcy5oYW5kbGVVcGxvYWQoJGV2ZW50KVwiPjwvbm92by1maWxlLWlucHV0PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L25nLXRlbXBsYXRlPlxuXG4gICAgICAgIDwhLS1UaWxlcy0tPlxuICAgICAgICA8bmctdGVtcGxhdGUgbm92b1RlbXBsYXRlPVwidGlsZXNcIiBsZXQtY29udHJvbCBsZXQtZm9ybT1cImZvcm1cIiBsZXQtZXJyb3JzPVwiZXJyb3JzXCIgbGV0LW1ldGhvZHM9XCJtZXRob2RzXCI+XG4gICAgICAgICAgPGRpdiBbZm9ybUdyb3VwXT1cImZvcm1cIj5cbiAgICAgICAgICAgIDxub3ZvLXRpbGVzIFtvcHRpb25zXT1cImNvbnRyb2wub3B0aW9uc1wiIFtmb3JtQ29udHJvbE5hbWVdPVwiY29udHJvbC5rZXlcIiAob25DaGFuZ2UpPVwibWV0aG9kcy5tb2RlbENoYW5nZSgkZXZlbnQpXCIgW3Rvb2x0aXBdPVwiY29udHJvbC50b29sdGlwXCIgW3Rvb2x0aXBQb3NpdGlvbl09XCJjb250cm9sLnRvb2x0aXBQb3NpdGlvblwiICBbdG9vbHRpcFNpemVdPVwiY29udHJvbD8udG9vbHRpcFNpemVcIiBbdG9vbHRpcFByZWxpbmVdPVwiY29udHJvbD8udG9vbHRpcFByZWxpbmVcIiBbcmVtb3ZlVG9vbHRpcEFycm93XT1cImNvbnRyb2w/LnJlbW92ZVRvb2x0aXBBcnJvd1wiIFt0b29sdGlwQXV0b1Bvc2l0aW9uXT1cImNvbnRyb2w/LnRvb2x0aXBBdXRvUG9zaXRpb25cIiBbY29udHJvbERpc2FibGVkXT1cImNvbnRyb2wuZGlzYWJsZWRcIj48L25vdm8tdGlsZXM+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvbmctdGVtcGxhdGU+XG5cbiAgICAgICAgPCEtLVBpY2tlci0tPlxuICAgICAgICA8bmctdGVtcGxhdGUgbm92b1RlbXBsYXRlPVwicGlja2VyXCIgbGV0LWNvbnRyb2wgbGV0LWZvcm09XCJmb3JtXCIgbGV0LWVycm9ycz1cImVycm9yc1wiIGxldC1tZXRob2RzPVwibWV0aG9kc1wiPlxuICAgICAgICAgIDxkaXYgW2Zvcm1Hcm91cF09XCJmb3JtXCIgY2xhc3M9XCJub3ZvLWNvbnRyb2wtaW5wdXQtY29udGFpbmVyXCI+XG4gICAgICAgICAgICA8bm92by1waWNrZXIgW2NvbmZpZ109XCJjb250cm9sLmNvbmZpZ1wiIFtmb3JtQ29udHJvbE5hbWVdPVwiY29udHJvbC5rZXlcIiBbcGxhY2Vob2xkZXJdPVwiY29udHJvbC5wbGFjZWhvbGRlclwiIFtwYXJlbnRTY3JvbGxTZWxlY3Rvcl09XCJjb250cm9sLnBhcmVudFNjcm9sbFNlbGVjdG9yXCIgKm5nSWY9XCIhY29udHJvbC5tdWx0aXBsZVwiIChzZWxlY3QpPVwibWV0aG9kcy5tb2RlbENoYW5nZSgkZXZlbnQpO1wiIChjaGFuZ2VkKT1cIm1ldGhvZHMubW9kZWxDaGFuZ2VXaXRoUmF3KCRldmVudClcIiAodHlwaW5nKT1cIm1ldGhvZHMuaGFuZGxlVHlwaW5nKCRldmVudClcIiAoZm9jdXMpPVwibWV0aG9kcy5oYW5kbGVGb2N1cygkZXZlbnQpXCIgKGJsdXIpPVwibWV0aG9kcy5oYW5kbGVCbHVyKCRldmVudClcIiBbdG9vbHRpcF09XCJjb250cm9sLnRvb2x0aXBcIiBbdG9vbHRpcFBvc2l0aW9uXT1cImNvbnRyb2wudG9vbHRpcFBvc2l0aW9uXCIgW3Rvb2x0aXBTaXplXT1cImNvbnRyb2w/LnRvb2x0aXBTaXplXCIgW3Rvb2x0aXBQcmVsaW5lXT1cImNvbnRyb2w/LnRvb2x0aXBQcmVsaW5lXCIgW3JlbW92ZVRvb2x0aXBBcnJvd109XCJjb250cm9sPy5yZW1vdmVUb29sdGlwQXJyb3dcIiBbdG9vbHRpcEF1dG9Qb3NpdGlvbl09XCJjb250cm9sPy50b29sdGlwQXV0b1Bvc2l0aW9uXCI+PC9ub3ZvLXBpY2tlcj5cbiAgICAgICAgICAgIDxub3ZvLWNoaXBzIFtzb3VyY2VdPVwiY29udHJvbC5jb25maWdcIiBbdHlwZV09XCJjb250cm9sLmNvbmZpZy50eXBlXCIgW2Zvcm1Db250cm9sTmFtZV09XCJjb250cm9sLmtleVwiIFtwbGFjZWhvbGRlcl09XCJjb250cm9sLnBsYWNlaG9sZGVyXCIgW21heGxlbmd0aF09XCJjb250cm9sPy5tYXhsZW5ndGhcIiAqbmdJZj1cImNvbnRyb2wubXVsdGlwbGUgJiYgIWNvbnRyb2wuY29uZmlnLmNvbHVtbnNcIiBbY2xvc2VPblNlbGVjdF09XCJjb250cm9sLmNsb3NlT25TZWxlY3RcIiAoY2hhbmdlZCk9XCJtZXRob2RzLm1vZGVsQ2hhbmdlV2l0aFJhdygkZXZlbnQpXCIgKHR5cGluZyk9XCJtZXRob2RzLmhhbmRsZVR5cGluZygkZXZlbnQpXCIgKGZvY3VzKT1cIm1ldGhvZHMuaGFuZGxlRm9jdXMoJGV2ZW50KVwiIChibHVyKT1cIm1ldGhvZHMuaGFuZGxlQmx1cigkZXZlbnQpXCIgW3Rvb2x0aXBdPVwiY29udHJvbC50b29sdGlwXCIgW3Rvb2x0aXBQb3NpdGlvbl09XCJjb250cm9sLnRvb2x0aXBQb3NpdGlvblwiIFt0b29sdGlwU2l6ZV09XCJjb250cm9sPy50b29sdGlwU2l6ZVwiIFt0b29sdGlwUHJlbGluZV09XCJjb250cm9sPy50b29sdGlwUHJlbGluZVwiIFtyZW1vdmVUb29sdGlwQXJyb3ddPVwiY29udHJvbD8ucmVtb3ZlVG9vbHRpcEFycm93XCIgW3Rvb2x0aXBBdXRvUG9zaXRpb25dPVwiY29udHJvbD8udG9vbHRpcEF1dG9Qb3NpdGlvblwiPjwvbm92by1jaGlwcz5cbiAgICAgICAgICAgIDxub3ZvLXJvdy1jaGlwcyBbc291cmNlXT1cImNvbnRyb2wuY29uZmlnXCIgW3R5cGVdPVwiY29udHJvbC5jb25maWcudHlwZVwiIFtmb3JtQ29udHJvbE5hbWVdPVwiY29udHJvbC5rZXlcIiBbcGxhY2Vob2xkZXJdPVwiY29udHJvbC5wbGFjZWhvbGRlclwiICpuZ0lmPVwiY29udHJvbC5tdWx0aXBsZSAmJiBjb250cm9sLmNvbmZpZy5jb2x1bW5zXCIgW2Nsb3NlT25TZWxlY3RdPVwiY29udHJvbC5jbG9zZU9uU2VsZWN0XCIgKGNoYW5nZWQpPVwibWV0aG9kcy5tb2RlbENoYW5nZVdpdGhSYXcoJGV2ZW50KVwiICh0eXBpbmcpPVwibWV0aG9kcy5oYW5kbGVUeXBpbmcoJGV2ZW50KVwiIChmb2N1cyk9XCJtZXRob2RzLmhhbmRsZUZvY3VzKCRldmVudClcIiAoYmx1cik9XCJtZXRob2RzLmhhbmRsZUJsdXIoJGV2ZW50KVwiIFt0b29sdGlwXT1cImNvbnRyb2wudG9vbHRpcFwiIFt0b29sdGlwUG9zaXRpb25dPVwiY29udHJvbC50b29sdGlwUG9zaXRpb25cIiBbdG9vbHRpcFNpemVdPVwiY29udHJvbD8udG9vbHRpcFNpemVcIiBbdG9vbHRpcFByZWxpbmVdPVwiY29udHJvbD8udG9vbHRpcFByZWxpbmVcIiBbcmVtb3ZlVG9vbHRpcEFycm93XT1cImNvbnRyb2w/LnJlbW92ZVRvb2x0aXBBcnJvd1wiIFt0b29sdGlwQXV0b1Bvc2l0aW9uXT1cImNvbnRyb2w/LnRvb2x0aXBBdXRvUG9zaXRpb25cIj48L25vdm8tcm93LWNoaXBzPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L25nLXRlbXBsYXRlPlxuXG4gICAgICAgIDwhLS1Ob3ZvIFNlbGVjdC0tPlxuICAgICAgICA8bmctdGVtcGxhdGUgbm92b1RlbXBsYXRlPVwic2VsZWN0XCIgbGV0LWNvbnRyb2wgbGV0LWZvcm09XCJmb3JtXCIgbGV0LWVycm9ycz1cImVycm9yc1wiIGxldC1tZXRob2RzPVwibWV0aG9kc1wiPlxuICAgICAgICAgIDxkaXYgW2Zvcm1Hcm91cF09XCJmb3JtXCI+XG4gICAgICAgICAgICA8bm92by1zZWxlY3QgW29wdGlvbnNdPVwiY29udHJvbC5vcHRpb25zXCIgW2hlYWRlckNvbmZpZ109XCJjb250cm9sLmhlYWRlckNvbmZpZ1wiIFtwbGFjZWhvbGRlcl09XCJjb250cm9sLnBsYWNlaG9sZGVyXCIgW2Zvcm1Db250cm9sTmFtZV09XCJjb250cm9sLmtleVwiIFt0b29sdGlwXT1cImNvbnRyb2wudG9vbHRpcFwiIFt0b29sdGlwUG9zaXRpb25dPVwiY29udHJvbC50b29sdGlwUG9zaXRpb25cIiBbdG9vbHRpcFNpemVdPVwiY29udHJvbD8udG9vbHRpcFNpemVcIiBbdG9vbHRpcFByZWxpbmVdPVwiY29udHJvbD8udG9vbHRpcFByZWxpbmVcIiBbcmVtb3ZlVG9vbHRpcEFycm93XT1cImNvbnRyb2w/LnJlbW92ZVRvb2x0aXBBcnJvd1wiIFt0b29sdGlwQXV0b1Bvc2l0aW9uXT1cImNvbnRyb2w/LnRvb2x0aXBBdXRvUG9zaXRpb25cIiAob25TZWxlY3QpPVwibWV0aG9kcy5tb2RlbENoYW5nZSgkZXZlbnQpXCI+PC9ub3ZvLXNlbGVjdD5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9uZy10ZW1wbGF0ZT5cblxuICAgICAgICA8IS0tUmFkaW8tLT5cbiAgICAgICAgPG5nLXRlbXBsYXRlIG5vdm9UZW1wbGF0ZT1cInJhZGlvXCIgbGV0LWNvbnRyb2wgbGV0LWZvcm09XCJmb3JtXCIgbGV0LWVycm9ycz1cImVycm9yc1wiIGxldC1tZXRob2RzPVwibWV0aG9kc1wiPlxuICAgICAgICAgIDxkaXYgW2Zvcm1Hcm91cF09XCJmb3JtXCIgY2xhc3M9XCJub3ZvLWNvbnRyb2wtaW5wdXQtY29udGFpbmVyXCI+XG4gICAgICAgICAgICA8bm92by1yYWRpbyBbbmFtZV09XCJjb250cm9sLmtleVwiIFtmb3JtQ29udHJvbE5hbWVdPVwiY29udHJvbC5rZXlcIiAqbmdGb3I9XCJsZXQgb3B0aW9uIG9mIGNvbnRyb2wub3B0aW9uc1wiIFt2YWx1ZV09XCJvcHRpb24udmFsdWVcIiBbbGFiZWxdPVwib3B0aW9uLmxhYmVsXCIgW2NoZWNrZWRdPVwib3B0aW9uLnZhbHVlID09PSBmb3JtLnZhbHVlW2NvbnRyb2wua2V5XSB8fCAoZm9ybS52YWx1ZVtjb250cm9sLmtleV0gJiYgb3B0aW9uLnZhbHVlID09PSBmb3JtLnZhbHVlW2NvbnRyb2wua2V5XS5pZClcIiBbdG9vbHRpcF09XCJjb250cm9sLnRvb2x0aXBcIiBbdG9vbHRpcFBvc2l0aW9uXT1cImNvbnRyb2wudG9vbHRpcFBvc2l0aW9uXCIgW3Rvb2x0aXBTaXplXT1cImNvbnRyb2w/LnRvb2x0aXBTaXplXCIgW3Rvb2x0aXBQcmVsaW5lXT1cImNvbnRyb2w/LnRvb2x0aXBQcmVsaW5lXCIgW3JlbW92ZVRvb2x0aXBBcnJvd109XCJjb250cm9sPy5yZW1vdmVUb29sdGlwQXJyb3dcIiBbdG9vbHRpcEF1dG9Qb3NpdGlvbl09XCJjb250cm9sPy50b29sdGlwQXV0b1Bvc2l0aW9uXCIgW2J1dHRvbl09XCIhIW9wdGlvbi5pY29uXCIgW2ljb25dPVwib3B0aW9uLmljb25cIiBbYXR0ci5kYXRhLWF1dG9tYXRpb24taWRdPVwiY29udHJvbC5rZXkgKyAnLScgKyAob3B0aW9uPy5sYWJlbCB8fCBvcHRpb24/LnZhbHVlKVwiPjwvbm92by1yYWRpbz5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9uZy10ZW1wbGF0ZT5cblxuICAgICAgICA8IS0tVGltZS0tPlxuICAgICAgICA8bmctdGVtcGxhdGUgbm92b1RlbXBsYXRlPVwidGltZVwiIGxldC1jb250cm9sIGxldC1mb3JtPVwiZm9ybVwiIGxldC1lcnJvcnM9XCJlcnJvcnNcIiBsZXQtbWV0aG9kcz1cIm1ldGhvZHNcIj5cbiAgICAgICAgICA8ZGl2IFtmb3JtR3JvdXBdPVwiZm9ybVwiIGNsYXNzPVwibm92by1jb250cm9sLWlucHV0LWNvbnRhaW5lclwiIFt0b29sdGlwXT1cImNvbnRyb2w/LnRvb2x0aXBcIiBbdG9vbHRpcFBvc2l0aW9uXT1cImNvbnRyb2w/LnRvb2x0aXBQb3NpdGlvblwiIFt0b29sdGlwU2l6ZV09XCJjb250cm9sPy50b29sdGlwU2l6ZVwiIFt0b29sdGlwUHJlbGluZV09XCJjb250cm9sPy50b29sdGlwUHJlbGluZVwiIFtyZW1vdmVUb29sdGlwQXJyb3ddPVwiY29udHJvbD8ucmVtb3ZlVG9vbHRpcEFycm93XCIgW3Rvb2x0aXBBdXRvUG9zaXRpb25dPVwiY29udHJvbD8udG9vbHRpcEF1dG9Qb3NpdGlvblwiPlxuICAgICAgICAgICAgPG5vdm8tdGltZS1waWNrZXItaW5wdXQgW2F0dHIuaWRdPVwiY29udHJvbC5rZXlcIiBbbmFtZV09XCJjb250cm9sLmtleVwiIFtmb3JtQ29udHJvbE5hbWVdPVwiY29udHJvbC5rZXlcIiBbcGxhY2Vob2xkZXJdPVwiY29udHJvbC5wbGFjZWhvbGRlclwiIFttaWxpdGFyeV09XCJjb250cm9sLm1pbGl0YXJ5XCI+PC9ub3ZvLXRpbWUtcGlja2VyLWlucHV0PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L25nLXRlbXBsYXRlPlxuXG4gICAgICAgIDwhLS1EYXRlLS0+XG4gICAgICAgIDxuZy10ZW1wbGF0ZSBub3ZvVGVtcGxhdGU9XCJkYXRlXCIgbGV0LWNvbnRyb2wgbGV0LWZvcm09XCJmb3JtXCIgbGV0LWVycm9ycz1cImVycm9yc1wiIGxldC1tZXRob2RzPVwibWV0aG9kc1wiPlxuICAgICAgICAgIDxkaXYgW2Zvcm1Hcm91cF09XCJmb3JtXCIgY2xhc3M9XCJub3ZvLWNvbnRyb2wtaW5wdXQtY29udGFpbmVyXCIgW3Rvb2x0aXBdPVwiY29udHJvbC50b29sdGlwXCIgW3Rvb2x0aXBQb3NpdGlvbl09XCJjb250cm9sLnRvb2x0aXBQb3NpdGlvblwiIFt0b29sdGlwU2l6ZV09XCJjb250cm9sPy50b29sdGlwU2l6ZVwiIFt0b29sdGlwUHJlbGluZV09XCJjb250cm9sPy50b29sdGlwUHJlbGluZVwiIFtyZW1vdmVUb29sdGlwQXJyb3ddPVwiY29udHJvbD8ucmVtb3ZlVG9vbHRpcEFycm93XCIgW3Rvb2x0aXBBdXRvUG9zaXRpb25dPVwiY29udHJvbD8udG9vbHRpcEF1dG9Qb3NpdGlvblwiPlxuICAgICAgICAgICAgPG5vdm8tZGF0ZS1waWNrZXItaW5wdXQgW2F0dHIuaWRdPVwiY29udHJvbC5rZXlcIiBbbmFtZV09XCJjb250cm9sLmtleVwiIFtmb3JtQ29udHJvbE5hbWVdPVwiY29udHJvbC5rZXlcIiBbc3RhcnRdPVwiY29udHJvbC5zdGFydERhdGVcIiBbZW5kXT1cImNvbnRyb2wuZW5kRGF0ZVwiIFtmb3JtYXRdPVwiY29udHJvbC5kYXRlRm9ybWF0XCIgW2FsbG93SW52YWxpZERhdGVdPVwiY29udHJvbC5hbGxvd0ludmFsaWREYXRlXCIgW3RleHRNYXNrRW5hYmxlZF09XCJjb250cm9sLnRleHRNYXNrRW5hYmxlZFwiIFtwbGFjZWhvbGRlcl09XCJjb250cm9sLnBsYWNlaG9sZGVyXCIgW3dlZWtTdGFydF09XCJjb250cm9sLndlZWtTdGFydFwiIChmb2N1c0V2ZW50KT1cIm1ldGhvZHMuaGFuZGxlRm9jdXMoJGV2ZW50KVwiIChibHVyRXZlbnQpPVwibWV0aG9kcy5oYW5kbGVCbHVyKCRldmVudClcIiAoY2hhbmdlRXZlbnQpPVwibWV0aG9kcy5lbWl0Q2hhbmdlKCRldmVudClcIj48L25vdm8tZGF0ZS1waWNrZXItaW5wdXQ+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvbmctdGVtcGxhdGU+XG5cbiAgICAgICAgPCEtLURhdGUgYW5kIFRpbWUtLT5cbiAgICAgICAgPG5nLXRlbXBsYXRlIG5vdm9UZW1wbGF0ZT1cImRhdGUtdGltZVwiIGxldC1jb250cm9sIGxldC1mb3JtPVwiZm9ybVwiIGxldC1lcnJvcnM9XCJlcnJvcnNcIiBsZXQtbWV0aG9kcz1cIm1ldGhvZHNcIj5cbiAgICAgICAgICA8ZGl2IFtmb3JtR3JvdXBdPVwiZm9ybVwiIGNsYXNzPVwibm92by1jb250cm9sLWlucHV0LWNvbnRhaW5lclwiIFt0b29sdGlwXT1cImNvbnRyb2wudG9vbHRpcFwiIFt0b29sdGlwUG9zaXRpb25dPVwiY29udHJvbC50b29sdGlwUG9zaXRpb25cIiBbdG9vbHRpcFNpemVdPVwiY29udHJvbD8udG9vbHRpcFNpemVcIiBbdG9vbHRpcFByZWxpbmVdPVwiY29udHJvbD8udG9vbHRpcFByZWxpbmVcIiBbcmVtb3ZlVG9vbHRpcEFycm93XT1cImNvbnRyb2w/LnJlbW92ZVRvb2x0aXBBcnJvd1wiIFt0b29sdGlwQXV0b1Bvc2l0aW9uXT1cImNvbnRyb2w/LnRvb2x0aXBBdXRvUG9zaXRpb25cIj5cbiAgICAgICAgICAgIDxub3ZvLWRhdGUtdGltZS1waWNrZXItaW5wdXQgW2F0dHIuaWRdPVwiY29udHJvbC5rZXlcIiBbbmFtZV09XCJjb250cm9sLmtleVwiIFtmb3JtQ29udHJvbE5hbWVdPVwiY29udHJvbC5rZXlcIiBbc3RhcnRdPVwiY29udHJvbC5zdGFydERhdGVcIiBbZW5kXT1cImNvbnRyb2wuZW5kRGF0ZVwiIFtwbGFjZWhvbGRlcl09XCJjb250cm9sLnBsYWNlaG9sZGVyXCIgW21pbGl0YXJ5XT1cImNvbnRyb2wubWlsaXRhcnlcIiBbd2Vla1N0YXJ0XT1cImNvbnRyb2wud2Vla1N0YXJ0XCIgKGZvY3VzRXZlbnQpPVwibWV0aG9kcy5oYW5kbGVGb2N1cygkZXZlbnQpXCIgKGJsdXJFdmVudCk9XCJtZXRob2RzLmhhbmRsZUJsdXIoJGV2ZW50KVwiIChjaGFuZ2VFdmVudCk9XCJtZXRob2RzLmVtaXRDaGFuZ2UoJGV2ZW50KVwiID48L25vdm8tZGF0ZS10aW1lLXBpY2tlci1pbnB1dD5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9uZy10ZW1wbGF0ZT5cblxuICAgICAgICA8IS0tQWRkcmVzcy0tPlxuICAgICAgICA8bmctdGVtcGxhdGUgbm92b1RlbXBsYXRlPVwiYWRkcmVzc1wiIGxldC1jb250cm9sIGxldC1mb3JtPVwiZm9ybVwiIGxldC1lcnJvcnM9XCJlcnJvcnNcIiBsZXQtbWV0aG9kcz1cIm1ldGhvZHNcIj5cbiAgICAgICAgICA8ZGl2IFtmb3JtR3JvdXBdPVwiZm9ybVwiPlxuICAgICAgICAgICAgPG5vdm8tYWRkcmVzcyBbZm9ybUNvbnRyb2xOYW1lXT1cImNvbnRyb2wua2V5XCIgW2NvbmZpZ109XCJjb250cm9sPy5jb25maWdcIiBbcmVhZE9ubHldPVwiY29udHJvbD8ucmVhZE9ubHlcIiAoY2hhbmdlKT1cIm1ldGhvZHMuaGFuZGxlQWRkcmVzc0NoYW5nZSgkZXZlbnQpXCIgKGZvY3VzKT1cIm1ldGhvZHMuaGFuZGxlRm9jdXMoJGV2ZW50LmV2ZW50LCAkZXZlbnQuZmllbGQpXCIgKGJsdXIpPVwibWV0aG9kcy5oYW5kbGVCbHVyKCRldmVudC5ldmVudCwgJGV2ZW50LmZpZWxkKVwiICAodmFsaWRpdHlDaGFuZ2UpPVwibWV0aG9kcy51cGRhdGVWYWxpZGl0eSgpXCI+PC9ub3ZvLWFkZHJlc3M+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvbmctdGVtcGxhdGU+XG5cbiAgICAgICAgPCEtLUNoZWNrYm94LS0+XG4gICAgICAgIDxuZy10ZW1wbGF0ZSBub3ZvVGVtcGxhdGU9XCJjaGVja2JveFwiIGxldC1jb250cm9sIGxldC1mb3JtPVwiZm9ybVwiIGxldC1lcnJvcnM9XCJlcnJvcnNcIiBsZXQtbWV0aG9kcz1cIm1ldGhvZHNcIj5cbiAgICAgICAgICA8ZGl2IFtmb3JtR3JvdXBdPVwiZm9ybVwiPlxuICAgICAgICAgICAgPG5vdm8tY2hlY2tib3ggW2Zvcm1Db250cm9sTmFtZV09XCJjb250cm9sPy5rZXlcIiBbbmFtZV09XCJjb250cm9sPy5rZXlcIiBbbGFiZWxdPVwiY29udHJvbD8uY2hlY2tib3hMYWJlbFwiIFt0b29sdGlwXT1cImNvbnRyb2w/LnRvb2x0aXBcIiBbdG9vbHRpcFBvc2l0aW9uXT1cImNvbnRyb2w/LnRvb2x0aXBQb3NpdGlvblwiIFt0b29sdGlwU2l6ZV09XCJjb250cm9sPy50b29sdGlwU2l6ZVwiIFt0b29sdGlwUHJlbGluZV09XCJjb250cm9sPy50b29sdGlwUHJlbGluZVwiIFtyZW1vdmVUb29sdGlwQXJyb3ddPVwiY29udHJvbD8ucmVtb3ZlVG9vbHRpcEFycm93XCIgW3Rvb2x0aXBBdXRvUG9zaXRpb25dPVwiY29udHJvbD8udG9vbHRpcEF1dG9Qb3NpdGlvblwiIFtsYXlvdXRPcHRpb25zXT1cImNvbnRyb2w/LmxheW91dE9wdGlvbnNcIj48L25vdm8tY2hlY2tib3g+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvbmctdGVtcGxhdGU+XG5cbiAgICAgICAgPCEtLUNoZWNrbGlzdC0tPlxuICAgICAgICA8bmctdGVtcGxhdGUgbm92b1RlbXBsYXRlPVwiY2hlY2tsaXN0XCIgbGV0LWNvbnRyb2wgbGV0LWZvcm09XCJmb3JtXCIgbGV0LWVycm9ycz1cImVycm9yc1wiIGxldC1tZXRob2RzPVwibWV0aG9kc1wiPlxuICAgICAgICAgIDxkaXYgW2Zvcm1Hcm91cF09XCJmb3JtXCI+XG4gICAgICAgICAgICA8bm92by1jaGVjay1saXN0IFtmb3JtQ29udHJvbE5hbWVdPVwiY29udHJvbC5rZXlcIiBbbmFtZV09XCJjb250cm9sLmtleVwiIFtvcHRpb25zXT1cImNvbnRyb2w/Lm9wdGlvbnNcIiBbdG9vbHRpcF09XCJjb250cm9sPy50b29sdGlwXCIgW3Rvb2x0aXBQb3NpdGlvbl09XCJjb250cm9sPy50b29sdGlwUG9zaXRpb25cIiBbdG9vbHRpcFNpemVdPVwiY29udHJvbD8udG9vbHRpcFNpemVcIiBbdG9vbHRpcFByZWxpbmVdPVwiY29udHJvbD8udG9vbHRpcFByZWxpbmVcIiBbcmVtb3ZlVG9vbHRpcEFycm93XT1cImNvbnRyb2w/LnJlbW92ZVRvb2x0aXBBcnJvd1wiIFt0b29sdGlwQXV0b1Bvc2l0aW9uXT1cImNvbnRyb2w/LnRvb2x0aXBBdXRvUG9zaXRpb25cIiAob25TZWxlY3QpPVwibWV0aG9kcy5tb2RlbENoYW5nZSgkZXZlbnQpXCI+PC9ub3ZvLWNoZWNrLWxpc3Q+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvbmctdGVtcGxhdGU+XG5cbiAgICAgICAgPCEtLVF1aWNrTm90ZS0tPlxuICAgICAgICA8bmctdGVtcGxhdGUgbm92b1RlbXBsYXRlPVwicXVpY2stbm90ZVwiIGxldC1jb250cm9sIGxldC1mb3JtPVwiZm9ybVwiIGxldC1lcnJvcnM9XCJlcnJvcnNcIiBsZXQtbWV0aG9kcz1cIm1ldGhvZHNcIj5cbiAgICAgICAgICA8ZGl2IFtmb3JtR3JvdXBdPVwiZm9ybVwiPlxuICAgICAgICAgICAgPG5vdm8tcXVpY2stbm90ZSBbZm9ybUNvbnRyb2xOYW1lXT1cImNvbnRyb2wua2V5XCIgW3N0YXJ0dXBGb2N1c109XCJjb250cm9sPy5zdGFydHVwRm9jdXNcIiBbcGxhY2Vob2xkZXJdPVwiY29udHJvbD8ucGxhY2Vob2xkZXJcIiBbY29uZmlnXT1cImNvbnRyb2w/LmNvbmZpZ1wiIChjaGFuZ2UpPVwibWV0aG9kcy5tb2RlbENoYW5nZSgkZXZlbnQpXCIgW3Rvb2x0aXBdPVwiY29udHJvbD8udG9vbHRpcFwiIFt0b29sdGlwUG9zaXRpb25dPVwiY29udHJvbD8udG9vbHRpcFBvc2l0aW9uXCIgW3Rvb2x0aXBTaXplXT1cImNvbnRyb2w/LnRvb2x0aXBTaXplXCIgW3JlbW92ZVRvb2x0aXBBcnJvd109XCJjb250cm9sPy5yZW1vdmVUb29sdGlwQXJyb3dcIiBbdG9vbHRpcEF1dG9Qb3NpdGlvbl09XCJjb250cm9sPy50b29sdGlwQXV0b1Bvc2l0aW9uXCIgW3Rvb2x0aXBQcmVsaW5lXT1cImNvbnRyb2w/LnRvb2x0aXBQcmVsaW5lXCI+PC9ub3ZvLXF1aWNrLW5vdGU+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvbmctdGVtcGxhdGU+XG4gICAgYCxcbn0pXG5leHBvcnQgY2xhc3MgTm92b0NvbnRyb2xUZW1wbGF0ZXMgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0IHtcbiAgQFZpZXdDaGlsZHJlbihOb3ZvVGVtcGxhdGUpXG4gIGRlZmF1bHRUZW1wbGF0ZXM6IFF1ZXJ5TGlzdDxOb3ZvVGVtcGxhdGU+O1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHRlbXBsYXRlczogTm92b1RlbXBsYXRlU2VydmljZSkgeyB9XG5cbiAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQge1xuICAgIGlmICh0aGlzLmRlZmF1bHRUZW1wbGF0ZXMgJiYgdGhpcy5kZWZhdWx0VGVtcGxhdGVzLmxlbmd0aCkge1xuICAgICAgdGhpcy5kZWZhdWx0VGVtcGxhdGVzLmZvckVhY2goKHRlbXBsYXRlOiBhbnkpID0+IHtcbiAgICAgICAgdGhpcy50ZW1wbGF0ZXMuYWRkRGVmYXVsdCh0ZW1wbGF0ZS5uYW1lLCB0ZW1wbGF0ZS50ZW1wbGF0ZSk7XG4gICAgICB9KTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==