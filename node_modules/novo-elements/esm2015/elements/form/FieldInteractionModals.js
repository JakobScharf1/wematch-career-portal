// NG2
import { Component } from '@angular/core';
// APP
import { NovoModalRef, NovoModalParams } from '../modal/Modal';
import { NovoLabelService } from '../../services/novo-label-service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../modal/Modal';
import * as ɵngcc2 from '../../services/novo-label-service';
import * as ɵngcc3 from '@angular/common';
import * as ɵngcc4 from '../button/Button';

function ControlConfirmModal_h2_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "h2");
    ɵngcc0.ɵɵelementStart(1, "label");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelement(4, "i", 4);
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1("", ctx_r0.params["label"], ":");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r0.params["oldValue"], " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r0.params["newValue"], "");
} }
function ControlConfirmModal_h2_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "h2");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r1.params["message"]);
} }
function ControlPromptModal_p_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "p");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const change_r1 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(change_r1);
} }
export class ControlConfirmModal {
    constructor(modalRef, params, labels) {
        this.modalRef = modalRef;
        this.params = params;
        this.labels = labels;
    }
    close(result) {
        this.modalRef.close(result);
    }
}
ControlConfirmModal.ɵfac = function ControlConfirmModal_Factory(t) { return new (t || ControlConfirmModal)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NovoModalRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NovoModalParams), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NovoLabelService)); };
ControlConfirmModal.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ControlConfirmModal, selectors: [["control-confirm-modal"]], decls: 9, vars: 8, consts: [["type", "warning"], [4, "ngIf"], ["theme", "standard", 3, "click"], ["theme", "primary", "icon", "check", "autofocus", "", 3, "click"], [1, "bhi-arrow-right"]], template: function ControlConfirmModal_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "novo-notification", 0);
        ɵngcc0.ɵɵelementStart(1, "h1");
        ɵngcc0.ɵɵtext(2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(3, ControlConfirmModal_h2_3_Template, 6, 3, "h2", 1);
        ɵngcc0.ɵɵtemplate(4, ControlConfirmModal_h2_4_Template, 2, 1, "h2", 1);
        ɵngcc0.ɵɵelementStart(5, "button", 2);
        ɵngcc0.ɵɵlistener("click", function ControlConfirmModal_Template_button_click_5_listener() { return ctx.close(false); });
        ɵngcc0.ɵɵtext(6);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(7, "button", 3);
        ɵngcc0.ɵɵlistener("click", function ControlConfirmModal_Template_button_click_7_listener() { return ctx.close(true); });
        ɵngcc0.ɵɵtext(8);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵattribute("data-automation-id", "field-interaction-modal-" + ctx.params["key"]);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate(ctx.labels.confirmChangesModalMessage);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.params["message"]);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.params["message"]);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵattribute("data-automation-id", "field-interaction-modal-cancel" + ctx.params["key"]);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ctx.labels.cancel);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵattribute("data-automation-id", "field-interaction-modal-save-" + ctx.params["key"]);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ctx.labels.save);
    } }, directives: [ɵngcc1.NovoModalNotificationElement, ɵngcc3.NgIf, ɵngcc4.NovoButtonElement], encapsulation: 2 });
ControlConfirmModal.ctorParameters = () => [
    { type: NovoModalRef },
    { type: NovoModalParams },
    { type: NovoLabelService }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ControlConfirmModal, [{
        type: Component,
        args: [{
                selector: 'control-confirm-modal',
                template: `
        <novo-notification type="warning" [attr.data-automation-id]="'field-interaction-modal-' + params['key']">
            <h1>{{ labels.confirmChangesModalMessage }}</h1>
            <h2 *ngIf="!params['message']"><label>{{ params['label'] }}:</label> {{ params['oldValue'] }} <i class="bhi-arrow-right"></i> {{ params['newValue'] }}</h2>
            <h2 *ngIf="params['message']">{{ params['message'] }}</h2>
            <button theme="standard" (click)="close(false)" [attr.data-automation-id]="'field-interaction-modal-cancel' + params['key']">{{ labels.cancel }}</button>
            <button theme="primary" icon="check" (click)="close(true)" autofocus [attr.data-automation-id]="'field-interaction-modal-save-' + params['key']">{{ labels.save }}</button>
        </novo-notification>
    `
            }]
    }], function () { return [{ type: ɵngcc1.NovoModalRef }, { type: ɵngcc1.NovoModalParams }, { type: ɵngcc2.NovoLabelService }]; }, null); })();
export class ControlPromptModal {
    constructor(modalRef, params, labels) {
        this.modalRef = modalRef;
        this.params = params;
        this.labels = labels;
    }
    close(result) {
        this.modalRef.close(result);
    }
}
ControlPromptModal.ɵfac = function ControlPromptModal_Factory(t) { return new (t || ControlPromptModal)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NovoModalRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NovoModalParams), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NovoLabelService)); };
ControlPromptModal.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ControlPromptModal, selectors: [["control-prompt-modal"]], decls: 8, vars: 7, consts: [["type", "warning"], [4, "ngFor", "ngForOf"], ["theme", "standard", 3, "click"], ["theme", "primary", "icon", "check", "autofocus", "", 3, "click"]], template: function ControlPromptModal_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "novo-notification", 0);
        ɵngcc0.ɵɵelementStart(1, "h1");
        ɵngcc0.ɵɵtext(2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(3, ControlPromptModal_p_3_Template, 2, 1, "p", 1);
        ɵngcc0.ɵɵelementStart(4, "button", 2);
        ɵngcc0.ɵɵlistener("click", function ControlPromptModal_Template_button_click_4_listener() { return ctx.close(false); });
        ɵngcc0.ɵɵtext(5);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(6, "button", 3);
        ɵngcc0.ɵɵlistener("click", function ControlPromptModal_Template_button_click_6_listener() { return ctx.close(true); });
        ɵngcc0.ɵɵtext(7);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵattribute("data-automation-id", "field-interaction-modal-" + ctx.params["key"]);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate(ctx.labels.promptModalMessage);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.params["changes"]);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵattribute("data-automation-id", "field-interaction-modal-cancel" + ctx.params["key"]);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ctx.labels.cancel);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵattribute("data-automation-id", "field-interaction-modal-yes-" + ctx.params["key"]);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ctx.labels.yes);
    } }, directives: [ɵngcc1.NovoModalNotificationElement, ɵngcc3.NgForOf, ɵngcc4.NovoButtonElement], encapsulation: 2 });
ControlPromptModal.ctorParameters = () => [
    { type: NovoModalRef },
    { type: NovoModalParams },
    { type: NovoLabelService }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ControlPromptModal, [{
        type: Component,
        args: [{
                selector: 'control-prompt-modal',
                template: `
        <novo-notification type="warning" [attr.data-automation-id]="'field-interaction-modal-' + params['key']">
            <h1>{{ labels.promptModalMessage }}</h1>
            <p *ngFor="let change of params['changes']">{{ change }}</p>
            <button theme="standard" (click)="close(false)" [attr.data-automation-id]="'field-interaction-modal-cancel' + params['key']">{{ labels.cancel }}</button>
            <button theme="primary" icon="check" (click)="close(true)" autofocus [attr.data-automation-id]="'field-interaction-modal-yes-' + params['key']">{{ labels.yes }}</button>
        </novo-notification>
    `
            }]
    }], function () { return [{ type: ɵngcc1.NovoModalRef }, { type: ɵngcc1.NovoModalParams }, { type: ɵngcc2.NovoLabelService }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRmllbGRJbnRlcmFjdGlvbk1vZGFscy5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcnVubmVyL3dvcmsvbm92by1lbGVtZW50cy9ub3ZvLWVsZW1lbnRzL3Byb2plY3RzL25vdm8tZWxlbWVudHMvc3JjL2VsZW1lbnRzL2Zvcm0vRmllbGRJbnRlcmFjdGlvbk1vZGFscy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNO0FBQ04sT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxQyxNQUFNO0FBQ04sT0FBTyxFQUFFLFlBQVksRUFBRSxlQUFlLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUMvRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWNyRSxNQUFNLE9BQU8sbUJBQW1CO0FBQ2hDLElBQUUsWUFBb0IsUUFBc0IsRUFBUyxNQUF1QixFQUFTLE1BQXdCO0FBQUksUUFBM0YsYUFBUSxHQUFSLFFBQVEsQ0FBYztBQUFDLFFBQVEsV0FBTSxHQUFOLE1BQU0sQ0FBaUI7QUFBQyxRQUFRLFdBQU0sR0FBTixNQUFNLENBQWtCO0FBQUMsSUFBRSxDQUFDO0FBQ2pILElBQ1MsS0FBSyxDQUFDLE1BQWU7QUFBSSxRQUM5QixJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUNoQyxJQUFFLENBQUM7QUFDSDsrQ0FsQkMsU0FBUyxTQUFDLGtCQUNULFFBQVEsRUFBRSx1QkFBdUIsa0JBQ2pDLFFBQVEsRUFBRTs7Ozs7OztrRUFRUDtBQUNKOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O3VIQUNJO0FBQUM7QUFDVSxZQWhCUCxZQUFZO0FBQUksWUFBRixlQUFlO0FBQUksWUFDakMsZ0JBQWdCO0FBQUc7Ozs7Ozs7Ozs7Ozs7OztrSkFBRTtBQWlDOUIsTUFBTSxPQUFPLGtCQUFrQjtBQUMvQixJQUFFLFlBQW9CLFFBQXNCLEVBQVMsTUFBdUIsRUFBUyxNQUF3QjtBQUFJLFFBQTNGLGFBQVEsR0FBUixRQUFRLENBQWM7QUFBQyxRQUFRLFdBQU0sR0FBTixNQUFNLENBQWlCO0FBQUMsUUFBUSxXQUFNLEdBQU4sTUFBTSxDQUFrQjtBQUFDLElBQUUsQ0FBQztBQUNqSCxJQUNTLEtBQUssQ0FBQyxNQUFlO0FBQUksUUFDOUIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDaEMsSUFBRSxDQUFDO0FBQ0g7OENBakJDLFNBQVMsU0FBQyxrQkFDVCxRQUFRLEVBQUUsc0JBQXNCLGtCQUNoQyxRQUFRLEVBQUU7Ozs7O2tCQU9QO0NBQ0o7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzswSEFDSTtBQUFDO0FBQ1UsWUFuQ1AsWUFBWTtBQUFJLFlBQUYsZUFBZTtBQUFJLFlBQ2pDLGdCQUFnQjtBQUFHOzs7Ozs7Ozs7Ozs7OztrSkFBRTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTkcyXG5pbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbi8vIEFQUFxuaW1wb3J0IHsgTm92b01vZGFsUmVmLCBOb3ZvTW9kYWxQYXJhbXMgfSBmcm9tICcuLi9tb2RhbC9Nb2RhbCc7XG5pbXBvcnQgeyBOb3ZvTGFiZWxTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvbm92by1sYWJlbC1zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnY29udHJvbC1jb25maXJtLW1vZGFsJyxcbiAgdGVtcGxhdGU6IGBcbiAgICAgICAgPG5vdm8tbm90aWZpY2F0aW9uIHR5cGU9XCJ3YXJuaW5nXCIgW2F0dHIuZGF0YS1hdXRvbWF0aW9uLWlkXT1cIidmaWVsZC1pbnRlcmFjdGlvbi1tb2RhbC0nICsgcGFyYW1zWydrZXknXVwiPlxuICAgICAgICAgICAgPGgxPnt7IGxhYmVscy5jb25maXJtQ2hhbmdlc01vZGFsTWVzc2FnZSB9fTwvaDE+XG4gICAgICAgICAgICA8aDIgKm5nSWY9XCIhcGFyYW1zWydtZXNzYWdlJ11cIj48bGFiZWw+e3sgcGFyYW1zWydsYWJlbCddIH19OjwvbGFiZWw+IHt7IHBhcmFtc1snb2xkVmFsdWUnXSB9fSA8aSBjbGFzcz1cImJoaS1hcnJvdy1yaWdodFwiPjwvaT4ge3sgcGFyYW1zWyduZXdWYWx1ZSddIH19PC9oMj5cbiAgICAgICAgICAgIDxoMiAqbmdJZj1cInBhcmFtc1snbWVzc2FnZSddXCI+e3sgcGFyYW1zWydtZXNzYWdlJ10gfX08L2gyPlxuICAgICAgICAgICAgPGJ1dHRvbiB0aGVtZT1cInN0YW5kYXJkXCIgKGNsaWNrKT1cImNsb3NlKGZhbHNlKVwiIFthdHRyLmRhdGEtYXV0b21hdGlvbi1pZF09XCInZmllbGQtaW50ZXJhY3Rpb24tbW9kYWwtY2FuY2VsJyArIHBhcmFtc1sna2V5J11cIj57eyBsYWJlbHMuY2FuY2VsIH19PC9idXR0b24+XG4gICAgICAgICAgICA8YnV0dG9uIHRoZW1lPVwicHJpbWFyeVwiIGljb249XCJjaGVja1wiIChjbGljayk9XCJjbG9zZSh0cnVlKVwiIGF1dG9mb2N1cyBbYXR0ci5kYXRhLWF1dG9tYXRpb24taWRdPVwiJ2ZpZWxkLWludGVyYWN0aW9uLW1vZGFsLXNhdmUtJyArIHBhcmFtc1sna2V5J11cIj57eyBsYWJlbHMuc2F2ZSB9fTwvYnV0dG9uPlxuICAgICAgICA8L25vdm8tbm90aWZpY2F0aW9uPlxuICAgIGAsXG59KVxuZXhwb3J0IGNsYXNzIENvbnRyb2xDb25maXJtTW9kYWwge1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG1vZGFsUmVmOiBOb3ZvTW9kYWxSZWYsIHB1YmxpYyBwYXJhbXM6IE5vdm9Nb2RhbFBhcmFtcywgcHVibGljIGxhYmVsczogTm92b0xhYmVsU2VydmljZSkge31cblxuICBwdWJsaWMgY2xvc2UocmVzdWx0OiBib29sZWFuKTogdm9pZCB7XG4gICAgdGhpcy5tb2RhbFJlZi5jbG9zZShyZXN1bHQpO1xuICB9XG59XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2NvbnRyb2wtcHJvbXB0LW1vZGFsJyxcbiAgdGVtcGxhdGU6IGBcbiAgICAgICAgPG5vdm8tbm90aWZpY2F0aW9uIHR5cGU9XCJ3YXJuaW5nXCIgW2F0dHIuZGF0YS1hdXRvbWF0aW9uLWlkXT1cIidmaWVsZC1pbnRlcmFjdGlvbi1tb2RhbC0nICsgcGFyYW1zWydrZXknXVwiPlxuICAgICAgICAgICAgPGgxPnt7IGxhYmVscy5wcm9tcHRNb2RhbE1lc3NhZ2UgfX08L2gxPlxuICAgICAgICAgICAgPHAgKm5nRm9yPVwibGV0IGNoYW5nZSBvZiBwYXJhbXNbJ2NoYW5nZXMnXVwiPnt7IGNoYW5nZSB9fTwvcD5cbiAgICAgICAgICAgIDxidXR0b24gdGhlbWU9XCJzdGFuZGFyZFwiIChjbGljayk9XCJjbG9zZShmYWxzZSlcIiBbYXR0ci5kYXRhLWF1dG9tYXRpb24taWRdPVwiJ2ZpZWxkLWludGVyYWN0aW9uLW1vZGFsLWNhbmNlbCcgKyBwYXJhbXNbJ2tleSddXCI+e3sgbGFiZWxzLmNhbmNlbCB9fTwvYnV0dG9uPlxuICAgICAgICAgICAgPGJ1dHRvbiB0aGVtZT1cInByaW1hcnlcIiBpY29uPVwiY2hlY2tcIiAoY2xpY2spPVwiY2xvc2UodHJ1ZSlcIiBhdXRvZm9jdXMgW2F0dHIuZGF0YS1hdXRvbWF0aW9uLWlkXT1cIidmaWVsZC1pbnRlcmFjdGlvbi1tb2RhbC15ZXMtJyArIHBhcmFtc1sna2V5J11cIj57eyBsYWJlbHMueWVzIH19PC9idXR0b24+XG4gICAgICAgIDwvbm92by1ub3RpZmljYXRpb24+XG4gICAgYCxcbn0pXG5leHBvcnQgY2xhc3MgQ29udHJvbFByb21wdE1vZGFsIHtcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBtb2RhbFJlZjogTm92b01vZGFsUmVmLCBwdWJsaWMgcGFyYW1zOiBOb3ZvTW9kYWxQYXJhbXMsIHB1YmxpYyBsYWJlbHM6IE5vdm9MYWJlbFNlcnZpY2UpIHt9XG5cbiAgcHVibGljIGNsb3NlKHJlc3VsdDogYm9vbGVhbik6IHZvaWQge1xuICAgIHRoaXMubW9kYWxSZWYuY2xvc2UocmVzdWx0KTtcbiAgfVxufVxuIl19